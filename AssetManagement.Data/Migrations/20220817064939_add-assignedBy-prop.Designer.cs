// <auto-generated />
using System;
using AssetManagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AssetManagement.Data.Migrations
{
    [DbContext(typeof(AssetManagementDbContext))]
    [Migration("20220817064939_add-assignedBy-prop")]
    partial class addassignedByprop
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AssetManagement.Domain.Model.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InstalledDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LocationID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StateID")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryID");

                    b.HasIndex("LocationID");

                    b.HasIndex("StateID");

                    b.ToTable("Assets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryID = 1,
                            Code = "LA000001",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(593),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(568),
                            LocationID = 1,
                            Name = "Laptop HP Probook 450 G1",
                            Specification = "Dummy Spec 1",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(595)
                        },
                        new
                        {
                            Id = 2,
                            CategoryID = 2,
                            Code = "MO000001",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(600),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(598),
                            LocationID = 1,
                            Name = "Moninor Dell UltraSharp",
                            Specification = "Dummy Spec 2",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(601)
                        },
                        new
                        {
                            Id = 3,
                            CategoryID = 3,
                            Code = "PC000001",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(606),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(605),
                            LocationID = 1,
                            Name = "Personal Computer",
                            Specification = "Dummy Spec 3",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(607)
                        },
                        new
                        {
                            Id = 4,
                            CategoryID = 1,
                            Code = "LA000002",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(610),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(608),
                            LocationID = 1,
                            Name = "Laptop Dell XPS 17 9710",
                            Specification = "Core i9-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(610)
                        },
                        new
                        {
                            Id = 5,
                            CategoryID = 2,
                            Code = "MO000002",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(613),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(612),
                            LocationID = 1,
                            Name = "Viewsonic VA2432-H",
                            Specification = "24INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(613)
                        },
                        new
                        {
                            Id = 6,
                            CategoryID = 3,
                            Code = "PC000002",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(617),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(616),
                            LocationID = 1,
                            Name = "MXWT2 – iMac 2020 27 inch 5K",
                            Specification = "Core i5 3.1GHz/ Radeon Pro 5300",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(617)
                        },
                        new
                        {
                            Id = 7,
                            CategoryID = 1,
                            Code = "LA000003",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(620),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(619),
                            LocationID = 1,
                            Name = "Laptop Dell XPS 18 9710",
                            Specification = "Core i7-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(620)
                        },
                        new
                        {
                            Id = 8,
                            CategoryID = 2,
                            Code = "MO000003",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(624),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(622),
                            LocationID = 1,
                            Name = "Viewsonic VA2434-H",
                            Specification = "20INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(624)
                        },
                        new
                        {
                            Id = 9,
                            CategoryID = 3,
                            Code = "PC000003",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(627),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(626),
                            LocationID = 1,
                            Name = "MXWT2 – iMac 2021 27 inch 5K",
                            Specification = "Core i7 3.1GHz/ Radeon Pro 5300",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(627)
                        },
                        new
                        {
                            Id = 10,
                            CategoryID = 1,
                            Code = "LA000004",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(631),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(630),
                            LocationID = 1,
                            Name = "Laptop Dell XPS 18 9715",
                            Specification = "Core i9-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(637)
                        },
                        new
                        {
                            Id = 11,
                            CategoryID = 2,
                            Code = "MO000004",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(664),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(663),
                            LocationID = 1,
                            Name = "Viewsonic VA2436-H",
                            Specification = "21INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(665)
                        },
                        new
                        {
                            Id = 12,
                            CategoryID = 3,
                            Code = "PC000004",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(667),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(666),
                            LocationID = 1,
                            Name = "MXWT2 – iMac 2022 29 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(668)
                        },
                        new
                        {
                            Id = 13,
                            CategoryID = 1,
                            Code = "LA000005",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(673),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(669),
                            LocationID = 1,
                            Name = "Laptop Dell XPS 19 9715",
                            Specification = "Core i5-11980HK, RAM 128GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(673)
                        },
                        new
                        {
                            Id = 14,
                            CategoryID = 2,
                            Code = "MO000005",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(676),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(674),
                            LocationID = 1,
                            Name = "Viewsonic VA2436-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(676)
                        },
                        new
                        {
                            Id = 15,
                            CategoryID = 3,
                            Code = "PC000005",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(679),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(678),
                            LocationID = 1,
                            Name = "MXWT3 – iMac 2022 26 inch 5K",
                            Specification = "Core i7 3.1GHz/ Radeon Pro 5300",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(679)
                        },
                        new
                        {
                            Id = 16,
                            CategoryID = 1,
                            Code = "LA000006",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(682),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(681),
                            LocationID = 1,
                            Name = "Laptop Dell XPS 19 9815",
                            Specification = "Core i7-11980HK, RAM 128GB, 4TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(683)
                        },
                        new
                        {
                            Id = 17,
                            CategoryID = 2,
                            Code = "MO000006",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(686),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(684),
                            LocationID = 1,
                            Name = "Viewsonic VA2440-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(686)
                        },
                        new
                        {
                            Id = 18,
                            CategoryID = 3,
                            Code = "PC000006",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(689),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(687),
                            LocationID = 1,
                            Name = "MXWT3 – iMac 2022 39 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(690)
                        },
                        new
                        {
                            Id = 19,
                            CategoryID = 2,
                            Code = "MO000007",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(693),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(691),
                            LocationID = 1,
                            Name = "Viewsonic VA2440-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(693)
                        },
                        new
                        {
                            Id = 20,
                            CategoryID = 3,
                            Code = "PC000007",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(696),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(694),
                            LocationID = 1,
                            Name = "MXWT3 – iMac 2022 39 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(696)
                        },
                        new
                        {
                            Id = 21,
                            CategoryID = 1,
                            Code = "LA000007",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(699),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(698),
                            LocationID = 2,
                            Name = "Laptop HP Probook 450 G1",
                            Specification = "Dummy Spec 1",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(700)
                        },
                        new
                        {
                            Id = 22,
                            CategoryID = 2,
                            Code = "MO000008",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(702),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(701),
                            LocationID = 2,
                            Name = "Moninor Dell UltraSharp",
                            Specification = "Dummy Spec 2",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(703)
                        },
                        new
                        {
                            Id = 23,
                            CategoryID = 3,
                            Code = "PC000008",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(705),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(704),
                            LocationID = 2,
                            Name = "Personal Computer",
                            Specification = "Dummy Spec 3",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(707)
                        },
                        new
                        {
                            Id = 24,
                            CategoryID = 1,
                            Code = "LA000008",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(709),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(708),
                            LocationID = 2,
                            Name = "Laptop Dell XPS 17 9710",
                            Specification = "Core i9-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(710)
                        },
                        new
                        {
                            Id = 25,
                            CategoryID = 2,
                            Code = "MO000009",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(712),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(711),
                            LocationID = 2,
                            Name = "Viewsonic VA2432-H",
                            Specification = "24INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(713)
                        },
                        new
                        {
                            Id = 26,
                            CategoryID = 3,
                            Code = "PC000009",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(716),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(714),
                            LocationID = 2,
                            Name = "MXWT2 – iMac 2020 27 inch 5K",
                            Specification = "Core i5 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(716)
                        },
                        new
                        {
                            Id = 27,
                            CategoryID = 1,
                            Code = "LA000009",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(719),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(717),
                            LocationID = 2,
                            Name = "Laptop Dell XPS 18 9710",
                            Specification = "Core i7-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(719)
                        },
                        new
                        {
                            Id = 28,
                            CategoryID = 2,
                            Code = "MO000010",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(722),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(721),
                            LocationID = 2,
                            Name = "Viewsonic VA2434-H",
                            Specification = "20INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(722)
                        },
                        new
                        {
                            Id = 29,
                            CategoryID = 3,
                            Code = "PC000010",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(772),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(770),
                            LocationID = 2,
                            Name = "MXWT2 – iMac 2021 27 inch 5K",
                            Specification = "Core i7 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(772)
                        },
                        new
                        {
                            Id = 30,
                            CategoryID = 1,
                            Code = "LA000010",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(776),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(774),
                            LocationID = 2,
                            Name = "Laptop Dell XPS 18 9715",
                            Specification = "Core i9-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(776)
                        },
                        new
                        {
                            Id = 31,
                            CategoryID = 2,
                            Code = "MO000011",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(779),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(778),
                            LocationID = 2,
                            Name = "Viewsonic VA2436-H",
                            Specification = "21INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(780)
                        },
                        new
                        {
                            Id = 32,
                            CategoryID = 3,
                            Code = "PC000011",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(782),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(781),
                            LocationID = 2,
                            Name = "MXWT2 – iMac 2022 29 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(783)
                        },
                        new
                        {
                            Id = 33,
                            CategoryID = 1,
                            Code = "LA000011",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(785),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(784),
                            LocationID = 2,
                            Name = "Laptop Dell XPS 19 9715",
                            Specification = "Core i5-11980HK, RAM 128GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(786)
                        },
                        new
                        {
                            Id = 34,
                            CategoryID = 2,
                            Code = "MO000012",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(789),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(787),
                            LocationID = 2,
                            Name = "Viewsonic VA2436-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(789)
                        },
                        new
                        {
                            Id = 35,
                            CategoryID = 3,
                            Code = "PC000012",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(792),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(791),
                            LocationID = 2,
                            Name = "MXWT3 – iMac 2022 26 inch 5K",
                            Specification = "Core i7 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(792)
                        },
                        new
                        {
                            Id = 36,
                            CategoryID = 1,
                            Code = "LA000012",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(795),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(794),
                            LocationID = 2,
                            Name = "Laptop Dell XPS 19 9815",
                            Specification = "Core i7-11980HK, RAM 128GB, 4TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(795)
                        },
                        new
                        {
                            Id = 37,
                            CategoryID = 2,
                            Code = "MO000013",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(800),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(798),
                            LocationID = 2,
                            Name = "Viewsonic VA2440-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(800)
                        },
                        new
                        {
                            Id = 38,
                            CategoryID = 3,
                            Code = "PC000013",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(803),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(802),
                            LocationID = 2,
                            Name = "MXWT3 – iMac 2022 39 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(803)
                        },
                        new
                        {
                            Id = 39,
                            CategoryID = 2,
                            Code = "MO000014",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(806),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(805),
                            LocationID = 2,
                            Name = "Viewsonic VA2440-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(807)
                        },
                        new
                        {
                            Id = 40,
                            CategoryID = 3,
                            Code = "PC000014",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(809),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(808),
                            LocationID = 2,
                            Name = "MXWT3 – iMac 2022 39 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(810)
                        },
                        new
                        {
                            Id = 41,
                            CategoryID = 1,
                            Code = "LA000013",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(813),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(811),
                            LocationID = 3,
                            Name = "Laptop HP Probook 450 G1",
                            Specification = "Dummy Spec 1",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(814)
                        },
                        new
                        {
                            Id = 42,
                            CategoryID = 2,
                            Code = "MO000015",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(818),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(816),
                            LocationID = 3,
                            Name = "Moninor Dell UltraSharp",
                            Specification = "Dummy Spec 2",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(818)
                        },
                        new
                        {
                            Id = 43,
                            CategoryID = 3,
                            Code = "PC000015",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(821),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(820),
                            LocationID = 3,
                            Name = "Personal Computer",
                            Specification = "Dummy Spec 3",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(821)
                        },
                        new
                        {
                            Id = 44,
                            CategoryID = 1,
                            Code = "LA000014",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(825),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(824),
                            LocationID = 3,
                            Name = "Laptop Dell XPS 17 9710",
                            Specification = "Core i9-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(826)
                        },
                        new
                        {
                            Id = 45,
                            CategoryID = 2,
                            Code = "MO000016",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(828),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(827),
                            LocationID = 3,
                            Name = "Viewsonic VA2432-H",
                            Specification = "24INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(829)
                        },
                        new
                        {
                            Id = 46,
                            CategoryID = 3,
                            Code = "PC000016",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(831),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(830),
                            LocationID = 3,
                            Name = "MXWT2 – iMac 2020 27 inch 5K",
                            Specification = "Core i5 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(832)
                        },
                        new
                        {
                            Id = 47,
                            CategoryID = 1,
                            Code = "LA000015",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(834),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(833),
                            LocationID = 3,
                            Name = "Laptop Dell XPS 18 9710",
                            Specification = "Core i7-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(835)
                        },
                        new
                        {
                            Id = 48,
                            CategoryID = 2,
                            Code = "MO000017",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(837),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(836),
                            LocationID = 3,
                            Name = "Viewsonic VA2434-H",
                            Specification = "20INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(838)
                        },
                        new
                        {
                            Id = 49,
                            CategoryID = 3,
                            Code = "PC000017",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(840),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(839),
                            LocationID = 3,
                            Name = "MXWT2 – iMac 2021 27 inch 5K",
                            Specification = "Core i7 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(841)
                        },
                        new
                        {
                            Id = 50,
                            CategoryID = 1,
                            Code = "LA000016",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(844),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(842),
                            LocationID = 3,
                            Name = "Laptop Dell XPS 18 9715",
                            Specification = "Core i9-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(844)
                        },
                        new
                        {
                            Id = 51,
                            CategoryID = 2,
                            Code = "MO000018",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(848),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(847),
                            LocationID = 3,
                            Name = "Viewsonic VA2436-H",
                            Specification = "21INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(848)
                        },
                        new
                        {
                            Id = 52,
                            CategoryID = 3,
                            Code = "PC000018",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(851),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(850),
                            LocationID = 3,
                            Name = "MXWT2 – iMac 2022 29 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(852)
                        },
                        new
                        {
                            Id = 53,
                            CategoryID = 1,
                            Code = "LA000017",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(855),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(854),
                            LocationID = 3,
                            Name = "Laptop Dell XPS 19 9715",
                            Specification = "Core i5-11980HK, RAM 128GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(856)
                        },
                        new
                        {
                            Id = 54,
                            CategoryID = 2,
                            Code = "MO000019",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(858),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(857),
                            LocationID = 3,
                            Name = "Viewsonic VA2436-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(859)
                        },
                        new
                        {
                            Id = 55,
                            CategoryID = 3,
                            Code = "PC000019",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(861),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(860),
                            LocationID = 3,
                            Name = "MXWT3 – iMac 2022 26 inch 5K",
                            Specification = "Core i7 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(862)
                        },
                        new
                        {
                            Id = 56,
                            CategoryID = 1,
                            Code = "LA000018",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(865),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(863),
                            LocationID = 3,
                            Name = "Laptop Dell XPS 19 9815",
                            Specification = "Core i7-11980HK, RAM 128GB, 4TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(865)
                        },
                        new
                        {
                            Id = 57,
                            CategoryID = 2,
                            Code = "MO000020",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(868),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(867),
                            LocationID = 3,
                            Name = "Viewsonic VA2440-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(869)
                        },
                        new
                        {
                            Id = 58,
                            CategoryID = 3,
                            Code = "PC000020",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(871),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(870),
                            LocationID = 3,
                            Name = "MXWT3 – iMac 2022 39 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(872)
                        },
                        new
                        {
                            Id = 59,
                            CategoryID = 2,
                            Code = "MO000021",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(874),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(873),
                            LocationID = 3,
                            Name = "Viewsonic VA2440-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(875)
                        },
                        new
                        {
                            Id = 60,
                            CategoryID = 3,
                            Code = "PC000021",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(878),
                            InstalledDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(876),
                            LocationID = 3,
                            Name = "MXWT3 – iMac 2022 39 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 115, DateTimeKind.Local).AddTicks(878)
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Assignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AssetId")
                        .HasColumnType("int");

                    b.Property<int>("AssignedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AssignedState")
                        .HasColumnType("int");

                    b.Property<int>("AssignedToId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReturnRequestId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("AssignedById");

                    b.HasIndex("AssignedToId");

                    b.HasIndex("ReturnRequestId")
                        .IsUnique()
                        .HasFilter("[ReturnRequestId] IS NOT NULL");

                    b.ToTable("Assignments", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssetId = 1,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(8792),
                            AssignedState = 2,
                            AssignedToId = 4,
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 485, DateTimeKind.Local).AddTicks(4803),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(7091)
                        },
                        new
                        {
                            Id = 2,
                            AssetId = 2,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9104),
                            AssignedState = 1,
                            AssignedToId = 4,
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9099),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9102)
                        },
                        new
                        {
                            Id = 3,
                            AssetId = 3,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9107),
                            AssignedState = 2,
                            AssignedToId = 4,
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9105),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9106)
                        },
                        new
                        {
                            Id = 4,
                            AssetId = 4,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9109),
                            AssignedState = 2,
                            AssignedToId = 6,
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9108),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9108)
                        },
                        new
                        {
                            Id = 5,
                            AssetId = 5,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9112),
                            AssignedState = 1,
                            AssignedToId = 6,
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9110),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9111)
                        },
                        new
                        {
                            Id = 6,
                            AssetId = 6,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9120),
                            AssignedState = 2,
                            AssignedToId = 6,
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9119),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9119)
                        },
                        new
                        {
                            Id = 7,
                            AssetId = 7,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9123),
                            AssignedState = 2,
                            AssignedToId = 8,
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9121),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9122)
                        },
                        new
                        {
                            Id = 8,
                            AssetId = 8,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9125),
                            AssignedState = 1,
                            AssignedToId = 8,
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9123),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9124)
                        },
                        new
                        {
                            Id = 9,
                            AssetId = 9,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9127),
                            AssignedState = 2,
                            AssignedToId = 8,
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9126),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9126)
                        },
                        new
                        {
                            Id = 10,
                            AssetId = 10,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9132),
                            AssignedState = 2,
                            AssignedToId = 10,
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9130),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9131)
                        },
                        new
                        {
                            Id = 11,
                            AssetId = 11,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9134),
                            AssignedState = 1,
                            AssignedToId = 10,
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9133),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9133)
                        },
                        new
                        {
                            Id = 12,
                            AssetId = 12,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9137),
                            AssignedState = 2,
                            AssignedToId = 10,
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9135),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9136)
                        },
                        new
                        {
                            Id = 13,
                            AssetId = 13,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9139),
                            AssignedState = 2,
                            AssignedToId = 12,
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9137),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9138)
                        },
                        new
                        {
                            Id = 14,
                            AssetId = 14,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9141),
                            AssignedState = 1,
                            AssignedToId = 12,
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9140),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9140)
                        },
                        new
                        {
                            Id = 15,
                            AssetId = 15,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9144),
                            AssignedState = 2,
                            AssignedToId = 12,
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9142),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9143)
                        },
                        new
                        {
                            Id = 16,
                            AssetId = 16,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9146),
                            AssignedState = 2,
                            AssignedToId = 13,
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9144),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9145)
                        },
                        new
                        {
                            Id = 17,
                            AssetId = 17,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9148),
                            AssignedState = 1,
                            AssignedToId = 13,
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9147),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9147)
                        },
                        new
                        {
                            Id = 18,
                            AssetId = 18,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9151),
                            AssignedState = 2,
                            AssignedToId = 13,
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9150),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9151)
                        },
                        new
                        {
                            Id = 19,
                            AssetId = 19,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9154),
                            AssignedState = 1,
                            AssignedToId = 14,
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9152),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9153)
                        },
                        new
                        {
                            Id = 20,
                            AssetId = 20,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9156),
                            AssignedState = 2,
                            AssignedToId = 14,
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9155),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9155)
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Laptop",
                            Prefix = "LA",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Monitor",
                            Prefix = "MO",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Personal Computer",
                            Prefix = "PC",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LocationName = "Hồ Chí Minh"
                        },
                        new
                        {
                            Id = 2,
                            LocationName = "Đà Nẵng"
                        },
                        new
                        {
                            Id = 3,
                            LocationName = "Hà Nội"
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.ReturnRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AcceptedById")
                        .HasColumnType("int");

                    b.Property<int>("AssetId")
                        .HasColumnType("int");

                    b.Property<int?>("AssignedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AssignmentId")
                        .HasColumnType("int");

                    b.Property<int>("RequestedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReturnedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AcceptedById");

                    b.HasIndex("AssetId");

                    b.HasIndex("AssignedById");

                    b.HasIndex("RequestedById");

                    b.ToTable("ReturnRequests", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AcceptedById = 1,
                            AssetId = 2,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9104),
                            AssignmentId = 2,
                            RequestedById = 4,
                            ReturnedDate = new DateTime(2022, 8, 14, 13, 49, 39, 125, DateTimeKind.Local).AddTicks(387),
                            State = 1
                        },
                        new
                        {
                            Id = 2,
                            AssetId = 5,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9112),
                            AssignmentId = 5,
                            RequestedById = 6,
                            State = 2
                        },
                        new
                        {
                            Id = 3,
                            AssetId = 8,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9125),
                            AssignmentId = 8,
                            RequestedById = 8,
                            State = 2
                        },
                        new
                        {
                            Id = 4,
                            AcceptedById = 1,
                            AssetId = 11,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9134),
                            AssignmentId = 11,
                            RequestedById = 10,
                            ReturnedDate = new DateTime(2022, 8, 17, 13, 49, 39, 125, DateTimeKind.Local).AddTicks(417),
                            State = 1
                        },
                        new
                        {
                            Id = 5,
                            AssetId = 17,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 13, 49, 38, 486, DateTimeKind.Local).AddTicks(9148),
                            AssignmentId = 17,
                            RequestedById = 13,
                            State = 2
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "2e872961-058f-40e9-91b4-773ab1c8bec9",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "1a2af296-0e02-4c13-9eb6-3121422373c3",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("State", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Assigned",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Available",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Not available",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Waiting for recycling",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Recycled",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPasswordChanged")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JoinedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "022ea215-331d-47f4-82f1-47be742a9e2e",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 16, DateTimeKind.Local).AddTicks(1437),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Nghia",
                            FullName = "Nghia Dinh Trong",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Dinh Trong",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "ADMINHCM",
                            PasswordHash = "AQAAAAEAACcQAAAAEGsFJd4Kmwnc8Fz1CIlWx5/lJ2LenFMl8E3M9A0PzypHDl1SzX5S0h5dAS+FBL6K+A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "46ba04b7-4efb-4003-baf9-bc7bc8706004",
                            StaffCode = "SD0001",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 16, DateTimeKind.Local).AddTicks(1449),
                            UserName = "AdminHCM"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cff009f9-8fe7-4a1a-908f-a61d6167f69b",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 16, DateTimeKind.Local).AddTicks(1458),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Thanh",
                            FullName = "Thanh Mai Quoc",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Mai Quoc",
                            LocationId = 2,
                            LockoutEnabled = false,
                            NormalizedUserName = "ADMINDN",
                            PasswordHash = "AQAAAAEAACcQAAAAEDTShgbuL+FUxD5aWiEU1d0O6VfF51K2roiWkJ2aHlpjXAC1ogNC7GEUbUjeWIEpBQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d63486ec-f7cc-4e92-a296-73dae53b2a1d",
                            StaffCode = "SD0002",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 16, DateTimeKind.Local).AddTicks(1459),
                            UserName = "AdminDN"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "54bc3911-a1e1-45bd-aa54-3c094b5b936a",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 16, DateTimeKind.Local).AddTicks(1466),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Yen",
                            FullName = "Yen Jennie",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Jennie",
                            LocationId = 3,
                            LockoutEnabled = false,
                            NormalizedUserName = "ADMINHN",
                            PasswordHash = "AQAAAAEAACcQAAAAEFSnay4r0XciWE05Or2cDf7pNJY8WyR9hJZTTCtXNwFp/RlZs1Yj+RjiDXA8/EA9jA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f56fb9db-b386-43bd-b395-d25b8dca86a7",
                            StaffCode = "SD0003",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 16, DateTimeKind.Local).AddTicks(1467),
                            UserName = "AdminHN"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f120967f-69b9-45a8-a2e6-9e7a9a1c76af",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 16, DateTimeKind.Local).AddTicks(1479),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Bui Xuan",
                            FullName = "Bui Xuan Vinh",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Vinh",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "VINHBX",
                            PasswordHash = "AQAAAAEAACcQAAAAEHH4RT8f0LyXCU+LYv3kQ5seq1dof+WwivWld+h/yihZZtup4voKtGeNTIcv5h9/MA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0dd00327-c3ac-4545-a8c6-85e57fda2e8a",
                            StaffCode = "SD0004",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 16, DateTimeKind.Local).AddTicks(1479),
                            UserName = "vinhbx"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6ba446cc-dfad-4a15-8638-3577a9cfd465",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 16, DateTimeKind.Local).AddTicks(1487),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Huong Khon",
                            FullName = "Huong Khon Vu",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Vu",
                            LocationId = 2,
                            LockoutEnabled = false,
                            NormalizedUserName = "VUHK",
                            PasswordHash = "AQAAAAEAACcQAAAAECA07jaYQMouJsQY713FiMFKE0ApRcNq3rL9LCbzWvH+6ax8p+tJ9/i16rwf8fMtng==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "fa180085-1eb8-44bf-9915-56a29110646b",
                            StaffCode = "SD0005",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 16, DateTimeKind.Local).AddTicks(1487),
                            UserName = "vuhk"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8e6711b9-544f-4183-8e45-5fcdf8644371",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 16, DateTimeKind.Local).AddTicks(1494),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Hau Diem",
                            FullName = "Hau Diem Xuan",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Xuan",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "XUANHD",
                            PasswordHash = "AQAAAAEAACcQAAAAEKAn9S7Fw00rK/Xjy/mjqQmF2YM/I0V0xHqektkxHRrXp8dunEwXt7MwYzzT1nVCdA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "835205fb-9e00-40ce-abc1-36c8461f2fbc",
                            StaffCode = "SD0006",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 16, DateTimeKind.Local).AddTicks(1494),
                            UserName = "xuanhd"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ef0655c9-9bd6-47f4-bf89-8ac7a6b06ae2",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 16, DateTimeKind.Local).AddTicks(1503),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Luu Huyen",
                            FullName = "Luu Huyen Duc",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Duc",
                            LocationId = 2,
                            LockoutEnabled = false,
                            NormalizedUserName = "DUCLH",
                            PasswordHash = "AQAAAAEAACcQAAAAEJc3vEJiBMpLjAR70mRTBQaVNzhsjzQDXQC/RIqpMHwZJZAVLvVYrGjKJtUKjN/wBQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8cb14c88-a072-4cdc-9441-5a1d3d235de3",
                            StaffCode = "SD0007",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 16, DateTimeKind.Local).AddTicks(1503),
                            UserName = "duclh"
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1b724aa6-6023-4b37-b003-fc789ae1291c",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 16, DateTimeKind.Local).AddTicks(1512),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Quang Van",
                            FullName = "Quang Van Truong",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Truong",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "TRUONGQV",
                            PasswordHash = "AQAAAAEAACcQAAAAEBN+1pmiTYZ+VXSWyW+IweEWZ85Z4HAgUTDlMz2GSWr6mEpAxVKrGZjK47Q+bHsP8w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6bddbbaa-64d5-4327-83e7-1ecc9e7e842b",
                            StaffCode = "SD0008",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 16, DateTimeKind.Local).AddTicks(1512),
                            UserName = "truongqv"
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1816df9f-28ce-4001-8535-b3e334668a0c",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 16, DateTimeKind.Local).AddTicks(1563),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Trieu Tu",
                            FullName = "Trieu Tu Long",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Long",
                            LocationId = 3,
                            LockoutEnabled = false,
                            NormalizedUserName = "LONGTT",
                            PasswordHash = "AQAAAAEAACcQAAAAECMh5r33WuTgw4mr5rKS8iHEdPmZVa9pmCedkwDqAsgL5uvXWQ2mPT48z+l8hLmjmg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "45133418-a0ac-4c61-be73-4c6372eed962",
                            StaffCode = "SD0009",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 16, DateTimeKind.Local).AddTicks(1563),
                            UserName = "longtt"
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9856cce7-b79b-4b46-aed7-b3ea062f8ecf",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 16, DateTimeKind.Local).AddTicks(1572),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Gia Cat",
                            FullName = "Gia Cat Luong",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Luong",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "LUONGGC",
                            PasswordHash = "AQAAAAEAACcQAAAAEMuJh0jzmVKTQxLZu6cTdqa04s3NU+fVM4g7DCvtsM5LnZ6sxuxfi44MZeh23OONkg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a02b1fa9-1330-409d-907d-6878600628a3",
                            StaffCode = "SD0010",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 16, DateTimeKind.Local).AddTicks(1572),
                            UserName = "luonggc"
                        },
                        new
                        {
                            Id = 12,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "948f5024-6e5a-4d22-95e9-092b1015b273",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 16, DateTimeKind.Local).AddTicks(1579),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Minh Khai",
                            FullName = "Nguyen Thi Minh Khai",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Nguyen Thi",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "MINHKHAINT",
                            PasswordHash = "AQAAAAEAACcQAAAAEE45DIqoPB0YhCT8rZgZz2dMrxCsfcBtCS03op+Nk6I5bi5vwywJLKFWf63GnBVAOQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "12022ce3-27c8-4370-a1e0-b5c3271d12d0",
                            StaffCode = "SD0012",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 16, DateTimeKind.Local).AddTicks(1579),
                            UserName = "minhkhaint"
                        },
                        new
                        {
                            Id = 13,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3e140884-d228-4b1c-98d0-4c21f877c19d",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 16, DateTimeKind.Local).AddTicks(1587),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Lan Ong",
                            FullName = "Hai Thuonng Lan Ong",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Hai Thuong",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "LANONGHT",
                            PasswordHash = "AQAAAAEAACcQAAAAEAws80V8zN1opUExgLycXofUpDhYxuAG2/z6z4qTCzkwUIvsUoVqE9UC9Dn6w0XVmQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "099321b5-5c65-4db9-922f-5d0c51af1c29",
                            StaffCode = "SD0013",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 16, DateTimeKind.Local).AddTicks(1588),
                            UserName = "lanonght"
                        },
                        new
                        {
                            Id = 14,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0fcfe6cb-fc57-4f59-8459-a231dec6ab8d",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 16, DateTimeKind.Local).AddTicks(1594),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Hoang",
                            FullName = "Ly Chieu Hoang",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Ly Chieu",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "HOANGLC",
                            PasswordHash = "AQAAAAEAACcQAAAAEBINkczeiaPTb4Lg5ikiN9a4aYpt1I9LmMLRTiS/JOZnsd1Yz8w9D9M7Zjc5dZOzEw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "be2fb936-ea51-4377-9809-182db1f128f5",
                            StaffCode = "SD0014",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 16, DateTimeKind.Local).AddTicks(1595),
                            UserName = "hoanglc"
                        },
                        new
                        {
                            Id = 11,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "948720db-1493-45e5-a990-6cc399dc11ee",
                            CreatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 16, DateTimeKind.Local).AddTicks(1601),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            Gender = false,
                            IsDisabled = true,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "ADMINDISABLE",
                            PasswordHash = "AQAAAAEAACcQAAAAEJCnGry1GMN9YSqRUMA3CXr8kremR43M1TQY4MkqoinvurNlGIvU21MW9bMJd16tjA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d1175ede-aed0-4437-8d9e-f4dcb3d94b09",
                            StaffCode = "SD0011",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 13, 49, 39, 16, DateTimeKind.Local).AddTicks(1601),
                            UserName = "AdminDisable"
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 11,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 12,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 13,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 14,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Asset", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.Category", "Category")
                        .WithMany("Assets")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.Location", "Location")
                        .WithMany("Assets")
                        .HasForeignKey("LocationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.State", "State")
                        .WithMany("Assets")
                        .HasForeignKey("StateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Location");

                    b.Navigation("State");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Assignment", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.Asset", "Asset")
                        .WithMany("Assignments")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.User", "AssignedBy")
                        .WithMany("AssignmentsBys")
                        .HasForeignKey("AssignedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.User", "AssignedTo")
                        .WithMany("Assignments")
                        .HasForeignKey("AssignedToId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.ReturnRequest", "ReturnRequest")
                        .WithOne("Assignment")
                        .HasForeignKey("AssetManagement.Domain.Model.Assignment", "ReturnRequestId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Asset");

                    b.Navigation("AssignedBy");

                    b.Navigation("AssignedTo");

                    b.Navigation("ReturnRequest");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.ReturnRequest", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.User", "AcceptedBy")
                        .WithMany("AcceptedRequestsBy")
                        .HasForeignKey("AcceptedById")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("AssetManagement.Domain.Model.Asset", "Asset")
                        .WithMany("Historical")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.User", "AssignedBy")
                        .WithMany("AssignedBy")
                        .HasForeignKey("AssignedById")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("AssetManagement.Domain.Model.User", "RequestedBy")
                        .WithMany("ReturnRequests")
                        .HasForeignKey("RequestedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AcceptedBy");

                    b.Navigation("Asset");

                    b.Navigation("AssignedBy");

                    b.Navigation("RequestedBy");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.User", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.Location", "Location")
                        .WithMany("Users")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.UserRole", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Asset", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("Historical");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Category", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Location", b =>
                {
                    b.Navigation("Assets");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.ReturnRequest", b =>
                {
                    b.Navigation("Assignment")
                        .IsRequired();
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.State", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.User", b =>
                {
                    b.Navigation("AcceptedRequestsBy");

                    b.Navigation("AssignedBy");

                    b.Navigation("Assignments");

                    b.Navigation("AssignmentsBys");

                    b.Navigation("ReturnRequests");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
