// <auto-generated />
using System;
using AssetManagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AssetManagement.Data.Migrations
{
    [DbContext(typeof(AssetManagementDbContext))]
    [Migration("20220809030031_add-return-request-model")]
    partial class addreturnrequestmodel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AssetManagement.Domain.Model.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("History")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InstalledDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LocationID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StateID")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryID");

                    b.HasIndex("LocationID");

                    b.HasIndex("StateID");

                    b.ToTable("Assets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryID = 1,
                            Code = "LA000001",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3324),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3296),
                            LocationID = 1,
                            Name = "Laptop HP Probook 450 G1",
                            Specification = "Dummy Spec 1",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3326)
                        },
                        new
                        {
                            Id = 2,
                            CategoryID = 2,
                            Code = "MO000001",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3355),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3353),
                            LocationID = 1,
                            Name = "Moninor Dell UltraSharp",
                            Specification = "Dummy Spec 2",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3356)
                        },
                        new
                        {
                            Id = 3,
                            CategoryID = 3,
                            Code = "PC000001",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3361),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3359),
                            LocationID = 1,
                            Name = "Personal Computer",
                            Specification = "Dummy Spec 3",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3362)
                        },
                        new
                        {
                            Id = 4,
                            CategoryID = 1,
                            Code = "LA000002",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3367),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3365),
                            LocationID = 1,
                            Name = "Laptop Dell XPS 17 9710",
                            Specification = "Core i9-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3368)
                        },
                        new
                        {
                            Id = 5,
                            CategoryID = 2,
                            Code = "MO000002",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3373),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3371),
                            LocationID = 1,
                            Name = "Viewsonic VA2432-H",
                            Specification = "24INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3374)
                        },
                        new
                        {
                            Id = 6,
                            CategoryID = 3,
                            Code = "PC000002",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3379),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3377),
                            LocationID = 1,
                            Name = "MXWT2 – iMac 2020 27 inch 5K",
                            Specification = "Core i5 3.1GHz/ Radeon Pro 5300",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3380)
                        },
                        new
                        {
                            Id = 7,
                            CategoryID = 1,
                            Code = "LA000003",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3385),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3383),
                            LocationID = 1,
                            Name = "Laptop Dell XPS 18 9710",
                            Specification = "Core i7-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3386)
                        },
                        new
                        {
                            Id = 8,
                            CategoryID = 2,
                            Code = "MO000003",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3391),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3388),
                            LocationID = 1,
                            Name = "Viewsonic VA2434-H",
                            Specification = "20INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3392)
                        },
                        new
                        {
                            Id = 9,
                            CategoryID = 3,
                            Code = "PC000003",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3397),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3394),
                            LocationID = 1,
                            Name = "MXWT2 – iMac 2021 27 inch 5K",
                            Specification = "Core i7 3.1GHz/ Radeon Pro 5300",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3398)
                        },
                        new
                        {
                            Id = 10,
                            CategoryID = 1,
                            Code = "LA000004",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3404),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3400),
                            LocationID = 1,
                            Name = "Laptop Dell XPS 18 9715",
                            Specification = "Core i9-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3405)
                        },
                        new
                        {
                            Id = 11,
                            CategoryID = 2,
                            Code = "MO000004",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3420),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3413),
                            LocationID = 1,
                            Name = "Viewsonic VA2436-H",
                            Specification = "21INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3421)
                        },
                        new
                        {
                            Id = 12,
                            CategoryID = 3,
                            Code = "PC000004",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3426),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3424),
                            LocationID = 1,
                            Name = "MXWT2 – iMac 2022 29 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3427)
                        },
                        new
                        {
                            Id = 13,
                            CategoryID = 1,
                            Code = "LA000005",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3432),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3430),
                            LocationID = 1,
                            Name = "Laptop Dell XPS 19 9715",
                            Specification = "Core i5-11980HK, RAM 128GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3433)
                        },
                        new
                        {
                            Id = 14,
                            CategoryID = 2,
                            Code = "MO000005",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3438),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3436),
                            LocationID = 1,
                            Name = "Viewsonic VA2436-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3439)
                        },
                        new
                        {
                            Id = 15,
                            CategoryID = 3,
                            Code = "PC000005",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3444),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3442),
                            LocationID = 1,
                            Name = "MXWT3 – iMac 2022 26 inch 5K",
                            Specification = "Core i7 3.1GHz/ Radeon Pro 5300",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3445)
                        },
                        new
                        {
                            Id = 16,
                            CategoryID = 1,
                            Code = "LA000006",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3450),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3448),
                            LocationID = 1,
                            Name = "Laptop Dell XPS 19 9815",
                            Specification = "Core i7-11980HK, RAM 128GB, 4TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3451)
                        },
                        new
                        {
                            Id = 17,
                            CategoryID = 2,
                            Code = "MO000006",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3456),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3453),
                            LocationID = 1,
                            Name = "Viewsonic VA2440-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3457)
                        },
                        new
                        {
                            Id = 18,
                            CategoryID = 3,
                            Code = "PC000006",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3462),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3459),
                            LocationID = 1,
                            Name = "MXWT3 – iMac 2022 39 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3463)
                        },
                        new
                        {
                            Id = 19,
                            CategoryID = 2,
                            Code = "MO000007",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3467),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3465),
                            LocationID = 1,
                            Name = "Viewsonic VA2440-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3468)
                        },
                        new
                        {
                            Id = 20,
                            CategoryID = 3,
                            Code = "PC000007",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3473),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3471),
                            LocationID = 1,
                            Name = "MXWT3 – iMac 2022 39 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3474)
                        },
                        new
                        {
                            Id = 21,
                            CategoryID = 1,
                            Code = "LA000007",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3479),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3477),
                            LocationID = 2,
                            Name = "Laptop HP Probook 450 G1",
                            Specification = "Dummy Spec 1",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3480)
                        },
                        new
                        {
                            Id = 22,
                            CategoryID = 2,
                            Code = "MO000008",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3485),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3483),
                            LocationID = 2,
                            Name = "Moninor Dell UltraSharp",
                            Specification = "Dummy Spec 2",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3486)
                        },
                        new
                        {
                            Id = 23,
                            CategoryID = 3,
                            Code = "PC000008",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3491),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3489),
                            LocationID = 2,
                            Name = "Personal Computer",
                            Specification = "Dummy Spec 3",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3492)
                        },
                        new
                        {
                            Id = 24,
                            CategoryID = 1,
                            Code = "LA000008",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3497),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3494),
                            LocationID = 2,
                            Name = "Laptop Dell XPS 17 9710",
                            Specification = "Core i9-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3498)
                        },
                        new
                        {
                            Id = 25,
                            CategoryID = 2,
                            Code = "MO000009",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3502),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3500),
                            LocationID = 2,
                            Name = "Viewsonic VA2432-H",
                            Specification = "24INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3503)
                        },
                        new
                        {
                            Id = 26,
                            CategoryID = 3,
                            Code = "PC000009",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3508),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3506),
                            LocationID = 2,
                            Name = "MXWT2 – iMac 2020 27 inch 5K",
                            Specification = "Core i5 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3509)
                        },
                        new
                        {
                            Id = 27,
                            CategoryID = 1,
                            Code = "LA000009",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3514),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3512),
                            LocationID = 2,
                            Name = "Laptop Dell XPS 18 9710",
                            Specification = "Core i7-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3515)
                        },
                        new
                        {
                            Id = 28,
                            CategoryID = 2,
                            Code = "MO000010",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3520),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3518),
                            LocationID = 2,
                            Name = "Viewsonic VA2434-H",
                            Specification = "20INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3522)
                        },
                        new
                        {
                            Id = 29,
                            CategoryID = 3,
                            Code = "PC000010",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3526),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3524),
                            LocationID = 2,
                            Name = "MXWT2 – iMac 2021 27 inch 5K",
                            Specification = "Core i7 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3528)
                        },
                        new
                        {
                            Id = 30,
                            CategoryID = 1,
                            Code = "LA000010",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3532),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3530),
                            LocationID = 2,
                            Name = "Laptop Dell XPS 18 9715",
                            Specification = "Core i9-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3533)
                        },
                        new
                        {
                            Id = 31,
                            CategoryID = 2,
                            Code = "MO000011",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3538),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3536),
                            LocationID = 2,
                            Name = "Viewsonic VA2436-H",
                            Specification = "21INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3539)
                        },
                        new
                        {
                            Id = 32,
                            CategoryID = 3,
                            Code = "PC000011",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3544),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3542),
                            LocationID = 2,
                            Name = "MXWT2 – iMac 2022 29 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3545)
                        },
                        new
                        {
                            Id = 33,
                            CategoryID = 1,
                            Code = "LA000011",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3550),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3547),
                            LocationID = 2,
                            Name = "Laptop Dell XPS 19 9715",
                            Specification = "Core i5-11980HK, RAM 128GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3551)
                        },
                        new
                        {
                            Id = 34,
                            CategoryID = 2,
                            Code = "MO000012",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3556),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3553),
                            LocationID = 2,
                            Name = "Viewsonic VA2436-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3557)
                        },
                        new
                        {
                            Id = 35,
                            CategoryID = 3,
                            Code = "PC000012",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3561),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3559),
                            LocationID = 2,
                            Name = "MXWT3 – iMac 2022 26 inch 5K",
                            Specification = "Core i7 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3562)
                        },
                        new
                        {
                            Id = 36,
                            CategoryID = 1,
                            Code = "LA000012",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3567),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3565),
                            LocationID = 2,
                            Name = "Laptop Dell XPS 19 9815",
                            Specification = "Core i7-11980HK, RAM 128GB, 4TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3568)
                        },
                        new
                        {
                            Id = 37,
                            CategoryID = 2,
                            Code = "MO000013",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3573),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3571),
                            LocationID = 2,
                            Name = "Viewsonic VA2440-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3574)
                        },
                        new
                        {
                            Id = 38,
                            CategoryID = 3,
                            Code = "PC000013",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3579),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3576),
                            LocationID = 2,
                            Name = "MXWT3 – iMac 2022 39 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3580)
                        },
                        new
                        {
                            Id = 39,
                            CategoryID = 2,
                            Code = "MO000014",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3585),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3583),
                            LocationID = 2,
                            Name = "Viewsonic VA2440-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3586)
                        },
                        new
                        {
                            Id = 40,
                            CategoryID = 3,
                            Code = "PC000014",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3591),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3589),
                            LocationID = 2,
                            Name = "MXWT3 – iMac 2022 39 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3592)
                        },
                        new
                        {
                            Id = 41,
                            CategoryID = 1,
                            Code = "LA000013",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3597),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3594),
                            LocationID = 3,
                            Name = "Laptop HP Probook 450 G1",
                            Specification = "Dummy Spec 1",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3598)
                        },
                        new
                        {
                            Id = 42,
                            CategoryID = 2,
                            Code = "MO000015",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3602),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3600),
                            LocationID = 3,
                            Name = "Moninor Dell UltraSharp",
                            Specification = "Dummy Spec 2",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3604)
                        },
                        new
                        {
                            Id = 43,
                            CategoryID = 3,
                            Code = "PC000015",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3608),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3606),
                            LocationID = 3,
                            Name = "Personal Computer",
                            Specification = "Dummy Spec 3",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3610)
                        },
                        new
                        {
                            Id = 44,
                            CategoryID = 1,
                            Code = "LA000014",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3614),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3612),
                            LocationID = 3,
                            Name = "Laptop Dell XPS 17 9710",
                            Specification = "Core i9-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3616)
                        },
                        new
                        {
                            Id = 45,
                            CategoryID = 2,
                            Code = "MO000016",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3620),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3618),
                            LocationID = 3,
                            Name = "Viewsonic VA2432-H",
                            Specification = "24INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3621)
                        },
                        new
                        {
                            Id = 46,
                            CategoryID = 3,
                            Code = "PC000016",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3626),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3624),
                            LocationID = 3,
                            Name = "MXWT2 – iMac 2020 27 inch 5K",
                            Specification = "Core i5 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3627)
                        },
                        new
                        {
                            Id = 47,
                            CategoryID = 1,
                            Code = "LA000015",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3632),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3629),
                            LocationID = 3,
                            Name = "Laptop Dell XPS 18 9710",
                            Specification = "Core i7-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3633)
                        },
                        new
                        {
                            Id = 48,
                            CategoryID = 2,
                            Code = "MO000017",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3638),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3635),
                            LocationID = 3,
                            Name = "Viewsonic VA2434-H",
                            Specification = "20INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3639)
                        },
                        new
                        {
                            Id = 49,
                            CategoryID = 3,
                            Code = "PC000017",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3644),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3641),
                            LocationID = 3,
                            Name = "MXWT2 – iMac 2021 27 inch 5K",
                            Specification = "Core i7 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3645)
                        },
                        new
                        {
                            Id = 50,
                            CategoryID = 1,
                            Code = "LA000016",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3649),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3647),
                            LocationID = 3,
                            Name = "Laptop Dell XPS 18 9715",
                            Specification = "Core i9-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3650)
                        },
                        new
                        {
                            Id = 51,
                            CategoryID = 2,
                            Code = "MO000018",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3655),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3653),
                            LocationID = 3,
                            Name = "Viewsonic VA2436-H",
                            Specification = "21INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3656)
                        },
                        new
                        {
                            Id = 52,
                            CategoryID = 3,
                            Code = "PC000018",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3661),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3659),
                            LocationID = 3,
                            Name = "MXWT2 – iMac 2022 29 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3662)
                        },
                        new
                        {
                            Id = 53,
                            CategoryID = 1,
                            Code = "LA000017",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3682),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3680),
                            LocationID = 3,
                            Name = "Laptop Dell XPS 19 9715",
                            Specification = "Core i5-11980HK, RAM 128GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3683)
                        },
                        new
                        {
                            Id = 54,
                            CategoryID = 2,
                            Code = "MO000019",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3688),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3686),
                            LocationID = 3,
                            Name = "Viewsonic VA2436-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3689)
                        },
                        new
                        {
                            Id = 55,
                            CategoryID = 3,
                            Code = "PC000019",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3694),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3692),
                            LocationID = 3,
                            Name = "MXWT3 – iMac 2022 26 inch 5K",
                            Specification = "Core i7 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3695)
                        },
                        new
                        {
                            Id = 56,
                            CategoryID = 1,
                            Code = "LA000018",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3700),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3698),
                            LocationID = 3,
                            Name = "Laptop Dell XPS 19 9815",
                            Specification = "Core i7-11980HK, RAM 128GB, 4TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3701)
                        },
                        new
                        {
                            Id = 57,
                            CategoryID = 2,
                            Code = "MO000020",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3706),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3703),
                            LocationID = 3,
                            Name = "Viewsonic VA2440-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3707)
                        },
                        new
                        {
                            Id = 58,
                            CategoryID = 3,
                            Code = "PC000020",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3712),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3709),
                            LocationID = 3,
                            Name = "MXWT3 – iMac 2022 39 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3713)
                        },
                        new
                        {
                            Id = 59,
                            CategoryID = 2,
                            Code = "MO000021",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3717),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3715),
                            LocationID = 3,
                            Name = "Viewsonic VA2440-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3718)
                        },
                        new
                        {
                            Id = 60,
                            CategoryID = 3,
                            Code = "PC000021",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3723),
                            InstalledDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3721),
                            LocationID = 3,
                            Name = "MXWT3 – iMac 2022 39 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 988, DateTimeKind.Local).AddTicks(3724)
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Assignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AssetId")
                        .HasColumnType("int");

                    b.Property<int>("AssignedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AssignedState")
                        .HasColumnType("int");

                    b.Property<int>("AssignedToId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("AssignedById");

                    b.HasIndex("AssignedToId");

                    b.ToTable("Assignments", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssetId = 1,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5784),
                            AssignedState = 2,
                            AssignedToId = 4,
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5774),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5781)
                        },
                        new
                        {
                            Id = 2,
                            AssetId = 2,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5790),
                            AssignedState = 1,
                            AssignedToId = 4,
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5787),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5788)
                        },
                        new
                        {
                            Id = 3,
                            AssetId = 3,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5795),
                            AssignedState = 2,
                            AssignedToId = 4,
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5792),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5793)
                        },
                        new
                        {
                            Id = 4,
                            AssetId = 4,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5801),
                            AssignedState = 2,
                            AssignedToId = 6,
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5797),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5799)
                        },
                        new
                        {
                            Id = 5,
                            AssetId = 5,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5806),
                            AssignedState = 1,
                            AssignedToId = 6,
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5802),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5804)
                        },
                        new
                        {
                            Id = 6,
                            AssetId = 6,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5811),
                            AssignedState = 2,
                            AssignedToId = 6,
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5807),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5809)
                        },
                        new
                        {
                            Id = 7,
                            AssetId = 7,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5816),
                            AssignedState = 2,
                            AssignedToId = 8,
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5812),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5814)
                        },
                        new
                        {
                            Id = 8,
                            AssetId = 8,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5821),
                            AssignedState = 1,
                            AssignedToId = 8,
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5818),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5819)
                        },
                        new
                        {
                            Id = 9,
                            AssetId = 9,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5826),
                            AssignedState = 2,
                            AssignedToId = 8,
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5823),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5824)
                        },
                        new
                        {
                            Id = 10,
                            AssetId = 10,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5831),
                            AssignedState = 2,
                            AssignedToId = 10,
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5828),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5829)
                        },
                        new
                        {
                            Id = 11,
                            AssetId = 11,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5836),
                            AssignedState = 1,
                            AssignedToId = 10,
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5833),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5834)
                        },
                        new
                        {
                            Id = 12,
                            AssetId = 12,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5841),
                            AssignedState = 2,
                            AssignedToId = 10,
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5838),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5839)
                        },
                        new
                        {
                            Id = 13,
                            AssetId = 13,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5846),
                            AssignedState = 2,
                            AssignedToId = 12,
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5843),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5845)
                        },
                        new
                        {
                            Id = 14,
                            AssetId = 14,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5851),
                            AssignedState = 1,
                            AssignedToId = 12,
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5848),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5849)
                        },
                        new
                        {
                            Id = 15,
                            AssetId = 15,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5857),
                            AssignedState = 2,
                            AssignedToId = 12,
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5853),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5855)
                        },
                        new
                        {
                            Id = 16,
                            AssetId = 16,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5862),
                            AssignedState = 2,
                            AssignedToId = 13,
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5859),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5860)
                        },
                        new
                        {
                            Id = 17,
                            AssetId = 17,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5867),
                            AssignedState = 1,
                            AssignedToId = 13,
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5864),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5865)
                        },
                        new
                        {
                            Id = 18,
                            AssetId = 18,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5872),
                            AssignedState = 2,
                            AssignedToId = 13,
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5869),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5870)
                        },
                        new
                        {
                            Id = 19,
                            AssetId = 19,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5877),
                            AssignedState = 1,
                            AssignedToId = 14,
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5874),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5875)
                        },
                        new
                        {
                            Id = 20,
                            AssetId = 20,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5882),
                            AssignedState = 2,
                            AssignedToId = 14,
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5879),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 992, DateTimeKind.Local).AddTicks(5880)
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Laptop",
                            Prefix = "LA",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Monitor",
                            Prefix = "MO",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Personal Computer",
                            Prefix = "PC",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LocationName = "Hồ Chí Minh"
                        },
                        new
                        {
                            Id = 2,
                            LocationName = "Đà Nẵng"
                        },
                        new
                        {
                            Id = 3,
                            LocationName = "Hà Nội"
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.ReturnRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AcceptedById")
                        .HasColumnType("int");

                    b.Property<int>("AssignmentId")
                        .HasColumnType("int");

                    b.Property<int>("RequestedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReturnedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AcceptedById");

                    b.HasIndex("AssignmentId")
                        .IsUnique();

                    b.HasIndex("RequestedById");

                    b.ToTable("ReturnRequests", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AcceptedById = 1,
                            AssignmentId = 2,
                            RequestedById = 4,
                            ReturnedDate = new DateTime(2022, 8, 8, 10, 0, 29, 996, DateTimeKind.Local).AddTicks(4194),
                            State = 1
                        },
                        new
                        {
                            Id = 2,
                            AssignmentId = 5,
                            RequestedById = 6,
                            ReturnedDate = new DateTime(2022, 8, 9, 10, 0, 29, 996, DateTimeKind.Local).AddTicks(4213),
                            State = 2
                        },
                        new
                        {
                            Id = 3,
                            AssignmentId = 8,
                            RequestedById = 8,
                            ReturnedDate = new DateTime(2022, 8, 10, 10, 0, 29, 996, DateTimeKind.Local).AddTicks(4214),
                            State = 2
                        },
                        new
                        {
                            Id = 4,
                            AcceptedById = 1,
                            AssignmentId = 11,
                            RequestedById = 10,
                            ReturnedDate = new DateTime(2022, 8, 11, 10, 0, 29, 996, DateTimeKind.Local).AddTicks(4217),
                            State = 1
                        },
                        new
                        {
                            Id = 5,
                            AssignmentId = 17,
                            RequestedById = 13,
                            ReturnedDate = new DateTime(2022, 8, 9, 10, 0, 29, 996, DateTimeKind.Local).AddTicks(4219),
                            State = 2
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "c0f49115-8219-4be0-a0ae-8c93e95517e6",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "8c979212-b35f-4b36-b352-96d6378a68fd",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("State", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Assigned",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Available",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Not available",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Waiting for recycling",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Recycled",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPasswordChanged")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JoinedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d4bc3a18-028a-419d-bbc7-5067e7bd7f72",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 953, DateTimeKind.Local).AddTicks(8130),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Nghia",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Dinh Trong",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "ADMINHCM",
                            PasswordHash = "AQAAAAEAACcQAAAAEFLVENS0iJd1MyryNdLemEdbdqqX94TJPZw75AbocRdqOfxh2RoqBl1ObL1v3X54DQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e15702ab-802d-448d-8512-59340968ee40",
                            StaffCode = "SD0001",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 953, DateTimeKind.Local).AddTicks(8151),
                            UserName = "AdminHCM"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2a6e8bbe-2624-4022-b230-c6c4873ae878",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 953, DateTimeKind.Local).AddTicks(8212),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Thanh",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Mai Quoc",
                            LocationId = 2,
                            LockoutEnabled = false,
                            NormalizedUserName = "ADMINDN",
                            PasswordHash = "AQAAAAEAACcQAAAAELvdX0mOrkIgtbQCWeG79GwkbLTQ5icMg7MK5lqpA3KgaNgkx0uOgs4lE2cq/LFDmQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2fba479d-06d2-46db-84c9-939387fe26ab",
                            StaffCode = "SD0002",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 953, DateTimeKind.Local).AddTicks(8214),
                            UserName = "AdminDN"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "738519a2-5660-4554-a237-8b6abf51554a",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 953, DateTimeKind.Local).AddTicks(8225),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Yen",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Jennie",
                            LocationId = 3,
                            LockoutEnabled = false,
                            NormalizedUserName = "ADMINHN",
                            PasswordHash = "AQAAAAEAACcQAAAAEJsC0WvDZHBdzUYyXCao8K41Jvfc/9x6L64y73P/xh3xLw1U5dE9oD0RvnEPReWepA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "57ed5f56-e375-458c-9d14-6bf63e9ffd4f",
                            StaffCode = "SD0003",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 953, DateTimeKind.Local).AddTicks(8227),
                            UserName = "AdminHN"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a59d5d3d-1467-46b2-a780-a05d1ab6f044",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 953, DateTimeKind.Local).AddTicks(8237),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Bui Xuan",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Vinh",
                            LocationId = 1,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEPOjVWVH15i0T8wg1ghGkZwK02Yff3vFPmzQhQKKPFQRA2JMadqMrOFQToYEqhvkKg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1e4dc9dd-06f8-4f24-bb64-9f540487c9c7",
                            StaffCode = "SD0004",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 953, DateTimeKind.Local).AddTicks(8238),
                            UserName = "vinhbx"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c93d50ff-e104-4e03-95e9-e69485c35b75",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 953, DateTimeKind.Local).AddTicks(8249),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Huong Khon",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Vu",
                            LocationId = 2,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAECQVFYbOujDCZKq/odizWwviRJumgQJaOb5xcvL90Xd622ilshwfBXedIBhXMSIxBA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "59a0e7f3-af72-408d-b63e-4d50a7efc208",
                            StaffCode = "SD0005",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 953, DateTimeKind.Local).AddTicks(8250),
                            UserName = "vuhk"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b0a54101-310d-495e-a46d-6522a4257761",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 953, DateTimeKind.Local).AddTicks(8267),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Hau Diem",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Xuan",
                            LocationId = 1,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEE16CMHcVn9LsQ7GjDA1GYjzuLqgcx+Io1CYklN3fkBu1mbriYZASxvoM1yqhCuxnQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8447513d-9203-4978-9687-c3451804425d",
                            StaffCode = "SD0006",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 953, DateTimeKind.Local).AddTicks(8268),
                            UserName = "xuanhd"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "736b3843-c1c4-4fd8-95a9-34ed7d8185a4",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 953, DateTimeKind.Local).AddTicks(8278),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Luu Huyen",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Duc",
                            LocationId = 2,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEIymLpeH5ZUKN7MvcQ0CEymFhLPwedD/I1gs8djWLA9VRocAml5RwNiv589nbt/tFw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b87fc42c-73b3-446d-a5f0-49fd212c905f",
                            StaffCode = "SD0007",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 953, DateTimeKind.Local).AddTicks(8279),
                            UserName = "duclh"
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1d6c257a-334d-4f64-a10d-2981a5981f3c",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 953, DateTimeKind.Local).AddTicks(8290),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Quang Van",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Truong",
                            LocationId = 1,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAECPUtrh06v1kmpbwRaRoufIhQ6/VHZvoJl+FEvjoDTvjea0DujULVRcvTuoclH8ftg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "06b4ce16-b5ef-42a3-9124-cc0d67fe171e",
                            StaffCode = "SD0008",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 953, DateTimeKind.Local).AddTicks(8291),
                            UserName = "truongqv"
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "67f5516f-b66a-4005-a068-c20bc9328970",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 953, DateTimeKind.Local).AddTicks(8301),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Trieu Tu",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Long",
                            LocationId = 3,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEI5B31n6EH4iPbFu36u9/lJRkoBR4fGcJXL8Au4d9tX8/vJMzoivUQtJQwRIPFGi+Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "cb9ed97d-fac5-4635-b6ec-265fe7629aa6",
                            StaffCode = "SD0009",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 953, DateTimeKind.Local).AddTicks(8302),
                            UserName = "longtt"
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0b2053da-ccac-4c95-a34f-8af32750650f",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 953, DateTimeKind.Local).AddTicks(8318),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Gia Cat",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Luong",
                            LocationId = 1,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEIE9xdYN0AHCN1LfXrRco55l/Gdfftij7rzZVZU2XOyNlZQzGvia89441HDQtIIq9Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9433b0e0-7e94-4feb-a6b2-5ea1b748e173",
                            StaffCode = "SD0010",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 953, DateTimeKind.Local).AddTicks(8319),
                            UserName = "luonggc"
                        },
                        new
                        {
                            Id = 12,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2bb61404-02a7-47a8-ade5-cf6d0e6d4cd0",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 953, DateTimeKind.Local).AddTicks(8330),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Minh Khai",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Nguyen Thi",
                            LocationId = 1,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEOn5IpjUjzcNKaHLQAmgJ2C4X6O47oh53T0sMdP7JK6zUQjvrWAUqpx0hRU6WwRuGQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "94438b2c-3348-4594-9046-d16e45b3c46c",
                            StaffCode = "SD0012",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 953, DateTimeKind.Local).AddTicks(8331),
                            UserName = "minhkhaint"
                        },
                        new
                        {
                            Id = 13,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4acfabe7-c499-4b07-929a-fc8628cd7cf0",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 953, DateTimeKind.Local).AddTicks(8360),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Lan Ong",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Hai Thuong",
                            LocationId = 1,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAELr8Fmtb9Bl6RgmZ8FgswDQNukj9H2Uiwq3JzjPCLJJ46zUeco1p/0q6kqgiljvT8w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3d855d76-e167-4f2e-b9e4-fe232589c0f9",
                            StaffCode = "SD0013",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 953, DateTimeKind.Local).AddTicks(8361),
                            UserName = "lanonght"
                        },
                        new
                        {
                            Id = 14,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5ec3d523-10a3-4ce8-897e-e196a3f12430",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 953, DateTimeKind.Local).AddTicks(8371),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Hoang",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Ly Chieu",
                            LocationId = 1,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEHQpnmW/8xePfglBa34MrgXOyOqGDdzXZi6DX4GYT7Py9HIbCMXOQ6oziSxXinVaPg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8d7b1bdf-b68a-4efe-8761-6613c74896bf",
                            StaffCode = "SD0014",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 953, DateTimeKind.Local).AddTicks(8373),
                            UserName = "hoanglc"
                        },
                        new
                        {
                            Id = 11,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8f4c749f-1f8d-47d9-ae3a-3c3baf8fdf43",
                            CreatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 953, DateTimeKind.Local).AddTicks(8387),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            Gender = false,
                            IsDisabled = true,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "ADMINDISABLE",
                            PasswordHash = "AQAAAAEAACcQAAAAEMdWBeUMmUXGvlDZny/qSipPG7Dg7+1x3pc6v6mYEwWvwRH0bnYIYN4KPqPWI72T8Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c65167f9-aa88-487f-8ae3-6fd0d248e611",
                            StaffCode = "SD0011",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 9, 10, 0, 29, 953, DateTimeKind.Local).AddTicks(8388),
                            UserName = "AdminDisable"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 11,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 12,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 13,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 14,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Asset", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.Category", "Category")
                        .WithMany("Assets")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.Location", "Location")
                        .WithMany("Assets")
                        .HasForeignKey("LocationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.State", "State")
                        .WithMany("Assets")
                        .HasForeignKey("StateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Location");

                    b.Navigation("State");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Assignment", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.Asset", "Asset")
                        .WithMany("Assignments")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.User", "AssignedBy")
                        .WithMany("AssignmentsBys")
                        .HasForeignKey("AssignedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.User", "AssignedTo")
                        .WithMany("Assignments")
                        .HasForeignKey("AssignedToId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Asset");

                    b.Navigation("AssignedBy");

                    b.Navigation("AssignedTo");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.ReturnRequest", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.User", "AcceptedBy")
                        .WithMany("AcceptedRequestsBy")
                        .HasForeignKey("AcceptedById")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("AssetManagement.Domain.Model.Assignment", "Assignment")
                        .WithOne("ReturnRequest")
                        .HasForeignKey("AssetManagement.Domain.Model.ReturnRequest", "AssignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.User", "RequestedBy")
                        .WithMany("ReturnRequests")
                        .HasForeignKey("RequestedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AcceptedBy");

                    b.Navigation("Assignment");

                    b.Navigation("RequestedBy");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.User", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.Location", "Location")
                        .WithMany("Users")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Asset", b =>
                {
                    b.Navigation("Assignments");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Assignment", b =>
                {
                    b.Navigation("ReturnRequest");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Category", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Location", b =>
                {
                    b.Navigation("Assets");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.State", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.User", b =>
                {
                    b.Navigation("AcceptedRequestsBy");

                    b.Navigation("Assignments");

                    b.Navigation("AssignmentsBys");

                    b.Navigation("ReturnRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
