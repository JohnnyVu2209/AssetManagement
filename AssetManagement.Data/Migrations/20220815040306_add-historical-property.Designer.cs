// <auto-generated />
using System;
using AssetManagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AssetManagement.Data.Migrations
{
    [DbContext(typeof(AssetManagementDbContext))]
    [Migration("20220815040306_add-historical-property")]
    partial class addhistoricalproperty
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AssetManagement.Domain.Model.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InstalledDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LocationID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StateID")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryID");

                    b.HasIndex("LocationID");

                    b.HasIndex("StateID");

                    b.ToTable("Assets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryID = 1,
                            Code = "LA000001",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8024),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8006),
                            LocationID = 1,
                            Name = "Laptop HP Probook 450 G1",
                            Specification = "Dummy Spec 1",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8025)
                        },
                        new
                        {
                            Id = 2,
                            CategoryID = 2,
                            Code = "MO000001",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8028),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8027),
                            LocationID = 1,
                            Name = "Moninor Dell UltraSharp",
                            Specification = "Dummy Spec 2",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8029)
                        },
                        new
                        {
                            Id = 3,
                            CategoryID = 3,
                            Code = "PC000001",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8032),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8031),
                            LocationID = 1,
                            Name = "Personal Computer",
                            Specification = "Dummy Spec 3",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8032)
                        },
                        new
                        {
                            Id = 4,
                            CategoryID = 1,
                            Code = "LA000002",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8035),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8034),
                            LocationID = 1,
                            Name = "Laptop Dell XPS 17 9710",
                            Specification = "Core i9-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8035)
                        },
                        new
                        {
                            Id = 5,
                            CategoryID = 2,
                            Code = "MO000002",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8038),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8037),
                            LocationID = 1,
                            Name = "Viewsonic VA2432-H",
                            Specification = "24INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8038)
                        },
                        new
                        {
                            Id = 6,
                            CategoryID = 3,
                            Code = "PC000002",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8041),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8040),
                            LocationID = 1,
                            Name = "MXWT2 – iMac 2020 27 inch 5K",
                            Specification = "Core i5 3.1GHz/ Radeon Pro 5300",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8041)
                        },
                        new
                        {
                            Id = 7,
                            CategoryID = 1,
                            Code = "LA000003",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8044),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8043),
                            LocationID = 1,
                            Name = "Laptop Dell XPS 18 9710",
                            Specification = "Core i7-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8044)
                        },
                        new
                        {
                            Id = 8,
                            CategoryID = 2,
                            Code = "MO000003",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8047),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8046),
                            LocationID = 1,
                            Name = "Viewsonic VA2434-H",
                            Specification = "20INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8047)
                        },
                        new
                        {
                            Id = 9,
                            CategoryID = 3,
                            Code = "PC000003",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8054),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8049),
                            LocationID = 1,
                            Name = "MXWT2 – iMac 2021 27 inch 5K",
                            Specification = "Core i7 3.1GHz/ Radeon Pro 5300",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8055)
                        },
                        new
                        {
                            Id = 10,
                            CategoryID = 1,
                            Code = "LA000004",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8057),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8056),
                            LocationID = 1,
                            Name = "Laptop Dell XPS 18 9715",
                            Specification = "Core i9-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8063)
                        },
                        new
                        {
                            Id = 11,
                            CategoryID = 2,
                            Code = "MO000004",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8077),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8076),
                            LocationID = 1,
                            Name = "Viewsonic VA2436-H",
                            Specification = "21INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8077)
                        },
                        new
                        {
                            Id = 12,
                            CategoryID = 3,
                            Code = "PC000004",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8080),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8079),
                            LocationID = 1,
                            Name = "MXWT2 – iMac 2022 29 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8080)
                        },
                        new
                        {
                            Id = 13,
                            CategoryID = 1,
                            Code = "LA000005",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8083),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8082),
                            LocationID = 1,
                            Name = "Laptop Dell XPS 19 9715",
                            Specification = "Core i5-11980HK, RAM 128GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8083)
                        },
                        new
                        {
                            Id = 14,
                            CategoryID = 2,
                            Code = "MO000005",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8086),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8085),
                            LocationID = 1,
                            Name = "Viewsonic VA2436-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8086)
                        },
                        new
                        {
                            Id = 15,
                            CategoryID = 3,
                            Code = "PC000005",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8089),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8088),
                            LocationID = 1,
                            Name = "MXWT3 – iMac 2022 26 inch 5K",
                            Specification = "Core i7 3.1GHz/ Radeon Pro 5300",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8089)
                        },
                        new
                        {
                            Id = 16,
                            CategoryID = 1,
                            Code = "LA000006",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8091),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8090),
                            LocationID = 1,
                            Name = "Laptop Dell XPS 19 9815",
                            Specification = "Core i7-11980HK, RAM 128GB, 4TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8092)
                        },
                        new
                        {
                            Id = 17,
                            CategoryID = 2,
                            Code = "MO000006",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8094),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8093),
                            LocationID = 1,
                            Name = "Viewsonic VA2440-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8095)
                        },
                        new
                        {
                            Id = 18,
                            CategoryID = 3,
                            Code = "PC000006",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8097),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8096),
                            LocationID = 1,
                            Name = "MXWT3 – iMac 2022 39 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8098)
                        },
                        new
                        {
                            Id = 19,
                            CategoryID = 2,
                            Code = "MO000007",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8101),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8099),
                            LocationID = 1,
                            Name = "Viewsonic VA2440-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8102)
                        },
                        new
                        {
                            Id = 20,
                            CategoryID = 3,
                            Code = "PC000007",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8104),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8103),
                            LocationID = 1,
                            Name = "MXWT3 – iMac 2022 39 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8105)
                        },
                        new
                        {
                            Id = 21,
                            CategoryID = 1,
                            Code = "LA000007",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8107),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8106),
                            LocationID = 2,
                            Name = "Laptop HP Probook 450 G1",
                            Specification = "Dummy Spec 1",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8108)
                        },
                        new
                        {
                            Id = 22,
                            CategoryID = 2,
                            Code = "MO000008",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8110),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8109),
                            LocationID = 2,
                            Name = "Moninor Dell UltraSharp",
                            Specification = "Dummy Spec 2",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8111)
                        },
                        new
                        {
                            Id = 23,
                            CategoryID = 3,
                            Code = "PC000008",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8113),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8112),
                            LocationID = 2,
                            Name = "Personal Computer",
                            Specification = "Dummy Spec 3",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8114)
                        },
                        new
                        {
                            Id = 24,
                            CategoryID = 1,
                            Code = "LA000008",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8116),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8115),
                            LocationID = 2,
                            Name = "Laptop Dell XPS 17 9710",
                            Specification = "Core i9-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8117)
                        },
                        new
                        {
                            Id = 25,
                            CategoryID = 2,
                            Code = "MO000009",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8121),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8119),
                            LocationID = 2,
                            Name = "Viewsonic VA2432-H",
                            Specification = "24INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8121)
                        },
                        new
                        {
                            Id = 26,
                            CategoryID = 3,
                            Code = "PC000009",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8124),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8123),
                            LocationID = 2,
                            Name = "MXWT2 – iMac 2020 27 inch 5K",
                            Specification = "Core i5 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8124)
                        },
                        new
                        {
                            Id = 27,
                            CategoryID = 1,
                            Code = "LA000009",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8130),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8128),
                            LocationID = 2,
                            Name = "Laptop Dell XPS 18 9710",
                            Specification = "Core i7-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8130)
                        },
                        new
                        {
                            Id = 28,
                            CategoryID = 2,
                            Code = "MO000010",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8133),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8131),
                            LocationID = 2,
                            Name = "Viewsonic VA2434-H",
                            Specification = "20INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8133)
                        },
                        new
                        {
                            Id = 29,
                            CategoryID = 3,
                            Code = "PC000010",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8136),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8135),
                            LocationID = 2,
                            Name = "MXWT2 – iMac 2021 27 inch 5K",
                            Specification = "Core i7 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8136)
                        },
                        new
                        {
                            Id = 30,
                            CategoryID = 1,
                            Code = "LA000010",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8138),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8137),
                            LocationID = 2,
                            Name = "Laptop Dell XPS 18 9715",
                            Specification = "Core i9-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8139)
                        },
                        new
                        {
                            Id = 31,
                            CategoryID = 2,
                            Code = "MO000011",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8141),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8140),
                            LocationID = 2,
                            Name = "Viewsonic VA2436-H",
                            Specification = "21INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8142)
                        },
                        new
                        {
                            Id = 32,
                            CategoryID = 3,
                            Code = "PC000011",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8144),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8143),
                            LocationID = 2,
                            Name = "MXWT2 – iMac 2022 29 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8145)
                        },
                        new
                        {
                            Id = 33,
                            CategoryID = 1,
                            Code = "LA000011",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8147),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8146),
                            LocationID = 2,
                            Name = "Laptop Dell XPS 19 9715",
                            Specification = "Core i5-11980HK, RAM 128GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8148)
                        },
                        new
                        {
                            Id = 34,
                            CategoryID = 2,
                            Code = "MO000012",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8150),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8149),
                            LocationID = 2,
                            Name = "Viewsonic VA2436-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8150)
                        },
                        new
                        {
                            Id = 35,
                            CategoryID = 3,
                            Code = "PC000012",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8153),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8152),
                            LocationID = 2,
                            Name = "MXWT3 – iMac 2022 26 inch 5K",
                            Specification = "Core i7 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8153)
                        },
                        new
                        {
                            Id = 36,
                            CategoryID = 1,
                            Code = "LA000012",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8156),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8155),
                            LocationID = 2,
                            Name = "Laptop Dell XPS 19 9815",
                            Specification = "Core i7-11980HK, RAM 128GB, 4TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8157)
                        },
                        new
                        {
                            Id = 37,
                            CategoryID = 2,
                            Code = "MO000013",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8159),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8158),
                            LocationID = 2,
                            Name = "Viewsonic VA2440-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8160)
                        },
                        new
                        {
                            Id = 38,
                            CategoryID = 3,
                            Code = "PC000013",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8162),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8161),
                            LocationID = 2,
                            Name = "MXWT3 – iMac 2022 39 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8163)
                        },
                        new
                        {
                            Id = 39,
                            CategoryID = 2,
                            Code = "MO000014",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8211),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8209),
                            LocationID = 2,
                            Name = "Viewsonic VA2440-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8212)
                        },
                        new
                        {
                            Id = 40,
                            CategoryID = 3,
                            Code = "PC000014",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8214),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8213),
                            LocationID = 2,
                            Name = "MXWT3 – iMac 2022 39 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8215)
                        },
                        new
                        {
                            Id = 41,
                            CategoryID = 1,
                            Code = "LA000013",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8217),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8216),
                            LocationID = 3,
                            Name = "Laptop HP Probook 450 G1",
                            Specification = "Dummy Spec 1",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8218)
                        },
                        new
                        {
                            Id = 42,
                            CategoryID = 2,
                            Code = "MO000015",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8220),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8219),
                            LocationID = 3,
                            Name = "Moninor Dell UltraSharp",
                            Specification = "Dummy Spec 2",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8221)
                        },
                        new
                        {
                            Id = 43,
                            CategoryID = 3,
                            Code = "PC000015",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8224),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8223),
                            LocationID = 3,
                            Name = "Personal Computer",
                            Specification = "Dummy Spec 3",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8224)
                        },
                        new
                        {
                            Id = 44,
                            CategoryID = 1,
                            Code = "LA000014",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8227),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8226),
                            LocationID = 3,
                            Name = "Laptop Dell XPS 17 9710",
                            Specification = "Core i9-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8227)
                        },
                        new
                        {
                            Id = 45,
                            CategoryID = 2,
                            Code = "MO000016",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8229),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8228),
                            LocationID = 3,
                            Name = "Viewsonic VA2432-H",
                            Specification = "24INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8230)
                        },
                        new
                        {
                            Id = 46,
                            CategoryID = 3,
                            Code = "PC000016",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8232),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8231),
                            LocationID = 3,
                            Name = "MXWT2 – iMac 2020 27 inch 5K",
                            Specification = "Core i5 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8233)
                        },
                        new
                        {
                            Id = 47,
                            CategoryID = 1,
                            Code = "LA000015",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8235),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8234),
                            LocationID = 3,
                            Name = "Laptop Dell XPS 18 9710",
                            Specification = "Core i7-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8236)
                        },
                        new
                        {
                            Id = 48,
                            CategoryID = 2,
                            Code = "MO000017",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8238),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8237),
                            LocationID = 3,
                            Name = "Viewsonic VA2434-H",
                            Specification = "20INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8238)
                        },
                        new
                        {
                            Id = 49,
                            CategoryID = 3,
                            Code = "PC000017",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8241),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8240),
                            LocationID = 3,
                            Name = "MXWT2 – iMac 2021 27 inch 5K",
                            Specification = "Core i7 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8241)
                        },
                        new
                        {
                            Id = 50,
                            CategoryID = 1,
                            Code = "LA000016",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8244),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8243),
                            LocationID = 3,
                            Name = "Laptop Dell XPS 18 9715",
                            Specification = "Core i9-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8244)
                        },
                        new
                        {
                            Id = 51,
                            CategoryID = 2,
                            Code = "MO000018",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8246),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8245),
                            LocationID = 3,
                            Name = "Viewsonic VA2436-H",
                            Specification = "21INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8247)
                        },
                        new
                        {
                            Id = 52,
                            CategoryID = 3,
                            Code = "PC000018",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8250),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8248),
                            LocationID = 3,
                            Name = "MXWT2 – iMac 2022 29 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8251)
                        },
                        new
                        {
                            Id = 53,
                            CategoryID = 1,
                            Code = "LA000017",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8253),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8252),
                            LocationID = 3,
                            Name = "Laptop Dell XPS 19 9715",
                            Specification = "Core i5-11980HK, RAM 128GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8254)
                        },
                        new
                        {
                            Id = 54,
                            CategoryID = 2,
                            Code = "MO000019",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8256),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8255),
                            LocationID = 3,
                            Name = "Viewsonic VA2436-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8257)
                        },
                        new
                        {
                            Id = 55,
                            CategoryID = 3,
                            Code = "PC000019",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8259),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8258),
                            LocationID = 3,
                            Name = "MXWT3 – iMac 2022 26 inch 5K",
                            Specification = "Core i7 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8260)
                        },
                        new
                        {
                            Id = 56,
                            CategoryID = 1,
                            Code = "LA000018",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8262),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8261),
                            LocationID = 3,
                            Name = "Laptop Dell XPS 19 9815",
                            Specification = "Core i7-11980HK, RAM 128GB, 4TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8262)
                        },
                        new
                        {
                            Id = 57,
                            CategoryID = 2,
                            Code = "MO000020",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8265),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8264),
                            LocationID = 3,
                            Name = "Viewsonic VA2440-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8265)
                        },
                        new
                        {
                            Id = 58,
                            CategoryID = 3,
                            Code = "PC000020",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8268),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8267),
                            LocationID = 3,
                            Name = "MXWT3 – iMac 2022 39 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8268)
                        },
                        new
                        {
                            Id = 59,
                            CategoryID = 2,
                            Code = "MO000021",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8271),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8270),
                            LocationID = 3,
                            Name = "Viewsonic VA2440-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8271)
                        },
                        new
                        {
                            Id = 60,
                            CategoryID = 3,
                            Code = "PC000021",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8274),
                            InstalledDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8273),
                            LocationID = 3,
                            Name = "MXWT3 – iMac 2022 39 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 539, DateTimeKind.Local).AddTicks(8274)
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Assignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AssetId")
                        .HasColumnType("int");

                    b.Property<int>("AssignedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AssignedState")
                        .HasColumnType("int");

                    b.Property<int>("AssignedToId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReturnRequestId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("AssignedById");

                    b.HasIndex("AssignedToId");

                    b.HasIndex("ReturnRequestId")
                        .IsUnique()
                        .HasFilter("[ReturnRequestId] IS NOT NULL");

                    b.ToTable("Assignments", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssetId = 1,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9088),
                            AssignedState = 2,
                            AssignedToId = 4,
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9075),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9086)
                        },
                        new
                        {
                            Id = 2,
                            AssetId = 2,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9090),
                            AssignedState = 1,
                            AssignedToId = 4,
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9089),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9089)
                        },
                        new
                        {
                            Id = 3,
                            AssetId = 3,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9092),
                            AssignedState = 2,
                            AssignedToId = 4,
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9091),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9092)
                        },
                        new
                        {
                            Id = 4,
                            AssetId = 4,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9094),
                            AssignedState = 2,
                            AssignedToId = 6,
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9093),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9093)
                        },
                        new
                        {
                            Id = 5,
                            AssetId = 5,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9096),
                            AssignedState = 1,
                            AssignedToId = 6,
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9095),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9095)
                        },
                        new
                        {
                            Id = 6,
                            AssetId = 6,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9098),
                            AssignedState = 2,
                            AssignedToId = 6,
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9097),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9097)
                        },
                        new
                        {
                            Id = 7,
                            AssetId = 7,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9099),
                            AssignedState = 2,
                            AssignedToId = 8,
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9098),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9099)
                        },
                        new
                        {
                            Id = 8,
                            AssetId = 8,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9101),
                            AssignedState = 1,
                            AssignedToId = 8,
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9100),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9101)
                        },
                        new
                        {
                            Id = 9,
                            AssetId = 9,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9103),
                            AssignedState = 2,
                            AssignedToId = 8,
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9102),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9102)
                        },
                        new
                        {
                            Id = 10,
                            AssetId = 10,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9105),
                            AssignedState = 2,
                            AssignedToId = 10,
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9104),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9104)
                        },
                        new
                        {
                            Id = 11,
                            AssetId = 11,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9107),
                            AssignedState = 1,
                            AssignedToId = 10,
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9105),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9106)
                        },
                        new
                        {
                            Id = 12,
                            AssetId = 12,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9108),
                            AssignedState = 2,
                            AssignedToId = 10,
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9107),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9108)
                        },
                        new
                        {
                            Id = 13,
                            AssetId = 13,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9110),
                            AssignedState = 2,
                            AssignedToId = 12,
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9109),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9110)
                        },
                        new
                        {
                            Id = 14,
                            AssetId = 14,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9112),
                            AssignedState = 1,
                            AssignedToId = 12,
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9111),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9112)
                        },
                        new
                        {
                            Id = 15,
                            AssetId = 15,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9114),
                            AssignedState = 2,
                            AssignedToId = 12,
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9113),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9113)
                        },
                        new
                        {
                            Id = 16,
                            AssetId = 16,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9116),
                            AssignedState = 2,
                            AssignedToId = 13,
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9115),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9115)
                        },
                        new
                        {
                            Id = 17,
                            AssetId = 17,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9118),
                            AssignedState = 1,
                            AssignedToId = 13,
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9117),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9117)
                        },
                        new
                        {
                            Id = 18,
                            AssetId = 18,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9119),
                            AssignedState = 2,
                            AssignedToId = 13,
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9118),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9119)
                        },
                        new
                        {
                            Id = 19,
                            AssetId = 19,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9121),
                            AssignedState = 1,
                            AssignedToId = 14,
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9120),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9121)
                        },
                        new
                        {
                            Id = 20,
                            AssetId = 20,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9123),
                            AssignedState = 2,
                            AssignedToId = 14,
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9122),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 544, DateTimeKind.Local).AddTicks(9123)
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Laptop",
                            Prefix = "LA",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Monitor",
                            Prefix = "MO",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Personal Computer",
                            Prefix = "PC",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LocationName = "Hồ Chí Minh"
                        },
                        new
                        {
                            Id = 2,
                            LocationName = "Đà Nẵng"
                        },
                        new
                        {
                            Id = 3,
                            LocationName = "Hà Nội"
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.ReturnRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AcceptedById")
                        .HasColumnType("int");

                    b.Property<int>("AssetId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AssignmentId")
                        .HasColumnType("int");

                    b.Property<int>("RequestedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReturnedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AcceptedById");

                    b.HasIndex("AssetId");

                    b.HasIndex("RequestedById");

                    b.ToTable("ReturnRequests", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AcceptedById = 1,
                            AssetId = 2,
                            AssignedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AssignmentId = 2,
                            RequestedById = 4,
                            ReturnedDate = new DateTime(2022, 8, 14, 11, 3, 5, 548, DateTimeKind.Local).AddTicks(7448),
                            State = 1
                        },
                        new
                        {
                            Id = 2,
                            AssetId = 5,
                            AssignedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AssignmentId = 5,
                            RequestedById = 6,
                            ReturnedDate = new DateTime(2022, 8, 15, 11, 3, 5, 548, DateTimeKind.Local).AddTicks(7464),
                            State = 2
                        },
                        new
                        {
                            Id = 3,
                            AssetId = 8,
                            AssignedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AssignmentId = 8,
                            RequestedById = 8,
                            ReturnedDate = new DateTime(2022, 8, 16, 11, 3, 5, 548, DateTimeKind.Local).AddTicks(7465),
                            State = 2
                        },
                        new
                        {
                            Id = 4,
                            AcceptedById = 1,
                            AssetId = 11,
                            AssignedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AssignmentId = 11,
                            RequestedById = 10,
                            ReturnedDate = new DateTime(2022, 8, 17, 11, 3, 5, 548, DateTimeKind.Local).AddTicks(7466),
                            State = 1
                        },
                        new
                        {
                            Id = 5,
                            AssetId = 17,
                            AssignedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AssignmentId = 17,
                            RequestedById = 13,
                            ReturnedDate = new DateTime(2022, 8, 15, 11, 3, 5, 548, DateTimeKind.Local).AddTicks(7467),
                            State = 2
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "5bb082af-5c8f-486c-bda6-80a6413a9875",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "e01675b3-9df0-4607-88a8-d5c14199d61c",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("State", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Assigned",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Available",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Not available",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Waiting for recycling",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Recycled",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPasswordChanged")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JoinedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "44a5c55d-b3f1-4660-b098-30f69337ec45",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 427, DateTimeKind.Local).AddTicks(4741),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Nghia",
                            FullName = "Nghia Dinh Trong",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Dinh Trong",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "ADMINHCM",
                            PasswordHash = "AQAAAAEAACcQAAAAEDJ96gZg4+OIFVTrkCOf7ZOr4p9LbrPvRm1dChLX6S3hNbM7fJ2XAziF96eyROcTUw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "bc9e33d7-c818-4ce7-8bae-70896523650a",
                            StaffCode = "SD0001",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 427, DateTimeKind.Local).AddTicks(4750),
                            UserName = "AdminHCM"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e9ab9488-fc18-45a9-9452-91c7265ae092",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 427, DateTimeKind.Local).AddTicks(4762),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Thanh",
                            FullName = "Thanh Mai Quoc",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Mai Quoc",
                            LocationId = 2,
                            LockoutEnabled = false,
                            NormalizedUserName = "ADMINDN",
                            PasswordHash = "AQAAAAEAACcQAAAAELIQu6KnyN2eC4EplTwFEk83Q9lnnz1vgkbV+ygkuMQg47/zvBd6AZojzpo511XRMA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9c726395-44bd-4341-bfdb-d88092e0538e",
                            StaffCode = "SD0002",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 427, DateTimeKind.Local).AddTicks(4763),
                            UserName = "AdminDN"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5a486d33-7121-44ec-9bd7-ed498e2235c8",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 427, DateTimeKind.Local).AddTicks(4773),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Yen",
                            FullName = "Yen Jennie",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Jennie",
                            LocationId = 3,
                            LockoutEnabled = false,
                            NormalizedUserName = "ADMINHN",
                            PasswordHash = "AQAAAAEAACcQAAAAENL5r7n99aR9cVK+Qh4D5iUCgtPi8NgPbQ74/x0kbdXusJmQwcjuE7DONaIyasSBIw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e92f21d5-7e40-4af9-8517-c59e669cd24b",
                            StaffCode = "SD0003",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 427, DateTimeKind.Local).AddTicks(4773),
                            UserName = "AdminHN"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0db3d4ba-98df-45b2-b82f-e90d4ec538af",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 427, DateTimeKind.Local).AddTicks(4784),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Bui Xuan",
                            FullName = "Bui Xuan Vinh",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Vinh",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "VINHBX",
                            PasswordHash = "AQAAAAEAACcQAAAAEM0j/PnMPf56OftUCddAB7GKdPX9q1KMHLxPxY7RVnKIKaluKmhF4F2kRahEWxKqNA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "42b7e9a9-52e3-43c2-b67f-76074b25a935",
                            StaffCode = "SD0004",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 427, DateTimeKind.Local).AddTicks(4784),
                            UserName = "vinhbx"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "47e7ec2f-3bb4-4b72-bf31-961d3cc72fdd",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 427, DateTimeKind.Local).AddTicks(4799),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Huong Khon",
                            FullName = "Huong Khon Vu",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Vu",
                            LocationId = 2,
                            LockoutEnabled = false,
                            NormalizedUserName = "VUHK",
                            PasswordHash = "AQAAAAEAACcQAAAAEC+UYu9aBxBiUi4pqzxZuC8QBlJOMSXqG+Aq9o/Gxb4qVqIXMyQTOCYfd+Iw2JrOrA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "435be71a-946f-48fa-9fca-ce2f57ebad57",
                            StaffCode = "SD0005",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 427, DateTimeKind.Local).AddTicks(4799),
                            UserName = "vuhk"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "71c7c287-2d18-464f-a721-62d2b54e112b",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 427, DateTimeKind.Local).AddTicks(4809),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Hau Diem",
                            FullName = "Hau Diem Xuan",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Xuan",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "XUANHD",
                            PasswordHash = "AQAAAAEAACcQAAAAEIBfWxBWpkkN1PHwSHGY752oaZSyLPXiemUMpvIQUgwap+enLk9bg28Y8/CURWch0A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4c2587cf-f8f3-47c2-a242-763201d36e23",
                            StaffCode = "SD0006",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 427, DateTimeKind.Local).AddTicks(4809),
                            UserName = "xuanhd"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f1e86598-aee4-4c6a-b178-b5b7bf566cde",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 427, DateTimeKind.Local).AddTicks(4819),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Luu Huyen",
                            FullName = "Luu Huyen Duc",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Duc",
                            LocationId = 2,
                            LockoutEnabled = false,
                            NormalizedUserName = "DUCLH",
                            PasswordHash = "AQAAAAEAACcQAAAAEMgOG88kHZn8K2TYfaViny4livhU/xwA5iH5sxciWPKmJgBgRbaRMbo4dfd3O+UOtw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "591dbf02-8b5f-47b6-8965-18b260b118a3",
                            StaffCode = "SD0007",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 427, DateTimeKind.Local).AddTicks(4820),
                            UserName = "duclh"
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "05154e8e-b851-4cc8-94a6-ea5fb3f78623",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 427, DateTimeKind.Local).AddTicks(4828),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Quang Van",
                            FullName = "Quang Van Truong",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Truong",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "TRUONGQV",
                            PasswordHash = "AQAAAAEAACcQAAAAECa+u4kl0n1bxMriv2+ovKGM93i0ZlcYafTExkc5zyukCxaOOZbI/BGQ2x7ipzIScg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "fcfd6858-6b40-440c-abc0-fe9296afca7b",
                            StaffCode = "SD0008",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 427, DateTimeKind.Local).AddTicks(4829),
                            UserName = "truongqv"
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a1a693b7-53a0-47f7-a32b-1450125f05bf",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 427, DateTimeKind.Local).AddTicks(4842),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Trieu Tu",
                            FullName = "Trieu Tu Long",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Long",
                            LocationId = 3,
                            LockoutEnabled = false,
                            NormalizedUserName = "LONGTT",
                            PasswordHash = "AQAAAAEAACcQAAAAED9p2WpB8YZmHN9tCWoIdUIUkIDDCHe+s2nQjY/ZhBIQQ93ezxuIU/AIKs5VzXXFKQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "60a4b62f-1fbf-4857-a8ee-99ecd47597c4",
                            StaffCode = "SD0009",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 427, DateTimeKind.Local).AddTicks(4843),
                            UserName = "longtt"
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "77c98e2c-9a5f-4168-a3be-2ac0c61f9585",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 427, DateTimeKind.Local).AddTicks(4853),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Gia Cat",
                            FullName = "Gia Cat Luong",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Luong",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "LUONGGC",
                            PasswordHash = "AQAAAAEAACcQAAAAEBRUYTJE0Bv/baXoBdoYi9Fltl7OWMUxeOy6m8MuYaoFI0/QCv8cGAkQdXj7ziiMIQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "15ea34af-63be-4f62-be21-5c84ae215176",
                            StaffCode = "SD0010",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 427, DateTimeKind.Local).AddTicks(4853),
                            UserName = "luonggc"
                        },
                        new
                        {
                            Id = 12,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f07d1284-3ca2-44d9-bc9f-497cb0c40415",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 427, DateTimeKind.Local).AddTicks(4863),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Minh Khai",
                            FullName = "Nguyen Thi Minh Khai",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Nguyen Thi",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "MINHKHAINT",
                            PasswordHash = "AQAAAAEAACcQAAAAEKYXXo2uQK9NgY5gfvZppFyaDXH15UsqMmPxxXkNz34wrJYt6mPj+ax8z2YSIzRy3w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "43e7b653-518b-4073-bc62-c895764de66f",
                            StaffCode = "SD0012",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 427, DateTimeKind.Local).AddTicks(4864),
                            UserName = "minhkhaint"
                        },
                        new
                        {
                            Id = 13,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "05c1f859-c450-48b2-8efb-7790ee1018d8",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 427, DateTimeKind.Local).AddTicks(4872),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Lan Ong",
                            FullName = "Hai Thuonng Lan Ong",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Hai Thuong",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "LANONGHT",
                            PasswordHash = "AQAAAAEAACcQAAAAEE/TTUC8orZ04R+PB5i70MpZ92faGRm5KppAOvjIBpCw1TPEI9M3gDdM4W5m+aEtww==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0fedbf96-fb5a-4529-818d-825bc2ba8751",
                            StaffCode = "SD0013",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 427, DateTimeKind.Local).AddTicks(4873),
                            UserName = "lanonght"
                        },
                        new
                        {
                            Id = 14,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c19e82a8-2fc5-4fec-a436-0ef3b7e45567",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 427, DateTimeKind.Local).AddTicks(4886),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Hoang",
                            FullName = "Ly Chieu Hoang",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Ly Chieu",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "HOANGLC",
                            PasswordHash = "AQAAAAEAACcQAAAAEMvi93cX35OOOZ871DcQtpBy7Fva3I2Epdzer/2eN95XW0i7CyE0WeCdwfwtMIsRcw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3ef053ec-80bf-490f-8d42-a6d1b1522d36",
                            StaffCode = "SD0014",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 427, DateTimeKind.Local).AddTicks(4887),
                            UserName = "hoanglc"
                        },
                        new
                        {
                            Id = 11,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "dd962546-0827-4161-bfaa-a8749d7cbabc",
                            CreatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 427, DateTimeKind.Local).AddTicks(4896),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            Gender = false,
                            IsDisabled = true,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "ADMINDISABLE",
                            PasswordHash = "AQAAAAEAACcQAAAAEFhtje+7EzJVzRniWD71aG8KIAkGMlpo9i4C+YhC34t3X/0w9Rh4DkdXX/+LtiiZvg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "30f00b44-0a08-4b6c-96aa-24f0b8525870",
                            StaffCode = "SD0011",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 11, 3, 5, 427, DateTimeKind.Local).AddTicks(4897),
                            UserName = "AdminDisable"
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 11,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 12,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 13,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 14,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Asset", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.Category", "Category")
                        .WithMany("Assets")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.Location", "Location")
                        .WithMany("Assets")
                        .HasForeignKey("LocationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.State", "State")
                        .WithMany("Assets")
                        .HasForeignKey("StateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Location");

                    b.Navigation("State");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Assignment", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.Asset", "Asset")
                        .WithMany("Assignments")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.User", "AssignedBy")
                        .WithMany("AssignmentsBys")
                        .HasForeignKey("AssignedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.User", "AssignedTo")
                        .WithMany("Assignments")
                        .HasForeignKey("AssignedToId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.ReturnRequest", "ReturnRequest")
                        .WithOne("Assignment")
                        .HasForeignKey("AssetManagement.Domain.Model.Assignment", "ReturnRequestId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Asset");

                    b.Navigation("AssignedBy");

                    b.Navigation("AssignedTo");

                    b.Navigation("ReturnRequest");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.ReturnRequest", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.User", "AcceptedBy")
                        .WithMany("AcceptedRequestsBy")
                        .HasForeignKey("AcceptedById")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("AssetManagement.Domain.Model.Asset", "Asset")
                        .WithMany("Historical")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.User", "RequestedBy")
                        .WithMany("ReturnRequests")
                        .HasForeignKey("RequestedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AcceptedBy");

                    b.Navigation("Asset");

                    b.Navigation("RequestedBy");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.User", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.Location", "Location")
                        .WithMany("Users")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.UserRole", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Asset", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("Historical");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Category", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Location", b =>
                {
                    b.Navigation("Assets");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.ReturnRequest", b =>
                {
                    b.Navigation("Assignment")
                        .IsRequired();
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.State", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.User", b =>
                {
                    b.Navigation("AcceptedRequestsBy");

                    b.Navigation("Assignments");

                    b.Navigation("AssignmentsBys");

                    b.Navigation("ReturnRequests");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
