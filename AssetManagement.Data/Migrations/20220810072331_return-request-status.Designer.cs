// <auto-generated />
using System;
using AssetManagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AssetManagement.Data.Migrations
{
    [DbContext(typeof(AssetManagementDbContext))]
    [Migration("20220810072331_return-request-status")]
    partial class returnrequeststatus
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AssetManagement.Domain.Model.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("History")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InstalledDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LocationID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StateID")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryID");

                    b.HasIndex("LocationID");

                    b.HasIndex("StateID");

                    b.ToTable("Assets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryID = 1,
                            Code = "LA000001",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(32),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(18),
                            LocationID = 1,
                            Name = "Laptop HP Probook 450 G1",
                            Specification = "Dummy Spec 1",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(33)
                        },
                        new
                        {
                            Id = 2,
                            CategoryID = 2,
                            Code = "MO000001",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(38),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(36),
                            LocationID = 1,
                            Name = "Moninor Dell UltraSharp",
                            Specification = "Dummy Spec 2",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(39)
                        },
                        new
                        {
                            Id = 3,
                            CategoryID = 3,
                            Code = "PC000001",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(42),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(40),
                            LocationID = 1,
                            Name = "Personal Computer",
                            Specification = "Dummy Spec 3",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(43)
                        },
                        new
                        {
                            Id = 4,
                            CategoryID = 1,
                            Code = "LA000002",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(46),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(45),
                            LocationID = 1,
                            Name = "Laptop Dell XPS 17 9710",
                            Specification = "Core i9-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(47)
                        },
                        new
                        {
                            Id = 5,
                            CategoryID = 2,
                            Code = "MO000002",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(51),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(49),
                            LocationID = 1,
                            Name = "Viewsonic VA2432-H",
                            Specification = "24INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(51)
                        },
                        new
                        {
                            Id = 6,
                            CategoryID = 3,
                            Code = "PC000002",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(55),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(53),
                            LocationID = 1,
                            Name = "MXWT2 – iMac 2020 27 inch 5K",
                            Specification = "Core i5 3.1GHz/ Radeon Pro 5300",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(56)
                        },
                        new
                        {
                            Id = 7,
                            CategoryID = 1,
                            Code = "LA000003",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(59),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(57),
                            LocationID = 1,
                            Name = "Laptop Dell XPS 18 9710",
                            Specification = "Core i7-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(60)
                        },
                        new
                        {
                            Id = 8,
                            CategoryID = 2,
                            Code = "MO000003",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(63),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(61),
                            LocationID = 1,
                            Name = "Viewsonic VA2434-H",
                            Specification = "20INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(64)
                        },
                        new
                        {
                            Id = 9,
                            CategoryID = 3,
                            Code = "PC000003",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(67),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(66),
                            LocationID = 1,
                            Name = "MXWT2 – iMac 2021 27 inch 5K",
                            Specification = "Core i7 3.1GHz/ Radeon Pro 5300",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(68)
                        },
                        new
                        {
                            Id = 10,
                            CategoryID = 1,
                            Code = "LA000004",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(72),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(70),
                            LocationID = 1,
                            Name = "Laptop Dell XPS 18 9715",
                            Specification = "Core i9-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(73)
                        },
                        new
                        {
                            Id = 11,
                            CategoryID = 2,
                            Code = "MO000004",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(76),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(74),
                            LocationID = 1,
                            Name = "Viewsonic VA2436-H",
                            Specification = "21INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(77)
                        },
                        new
                        {
                            Id = 12,
                            CategoryID = 3,
                            Code = "PC000004",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(80),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(78),
                            LocationID = 1,
                            Name = "MXWT2 – iMac 2022 29 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(81)
                        },
                        new
                        {
                            Id = 13,
                            CategoryID = 1,
                            Code = "LA000005",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(84),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(83),
                            LocationID = 1,
                            Name = "Laptop Dell XPS 19 9715",
                            Specification = "Core i5-11980HK, RAM 128GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(85)
                        },
                        new
                        {
                            Id = 14,
                            CategoryID = 2,
                            Code = "MO000005",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(89),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(87),
                            LocationID = 1,
                            Name = "Viewsonic VA2436-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(89)
                        },
                        new
                        {
                            Id = 15,
                            CategoryID = 3,
                            Code = "PC000005",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(93),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(91),
                            LocationID = 1,
                            Name = "MXWT3 – iMac 2022 26 inch 5K",
                            Specification = "Core i7 3.1GHz/ Radeon Pro 5300",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(94)
                        },
                        new
                        {
                            Id = 16,
                            CategoryID = 1,
                            Code = "LA000006",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(97),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(95),
                            LocationID = 1,
                            Name = "Laptop Dell XPS 19 9815",
                            Specification = "Core i7-11980HK, RAM 128GB, 4TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(98)
                        },
                        new
                        {
                            Id = 17,
                            CategoryID = 2,
                            Code = "MO000006",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(101),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(100),
                            LocationID = 1,
                            Name = "Viewsonic VA2440-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(102)
                        },
                        new
                        {
                            Id = 18,
                            CategoryID = 3,
                            Code = "PC000006",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(106),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(104),
                            LocationID = 1,
                            Name = "MXWT3 – iMac 2022 39 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(106)
                        },
                        new
                        {
                            Id = 19,
                            CategoryID = 2,
                            Code = "MO000007",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(110),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(108),
                            LocationID = 1,
                            Name = "Viewsonic VA2440-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(111)
                        },
                        new
                        {
                            Id = 20,
                            CategoryID = 3,
                            Code = "PC000007",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(114),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(112),
                            LocationID = 1,
                            Name = "MXWT3 – iMac 2022 39 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(115)
                        },
                        new
                        {
                            Id = 21,
                            CategoryID = 1,
                            Code = "LA000007",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(119),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(117),
                            LocationID = 2,
                            Name = "Laptop HP Probook 450 G1",
                            Specification = "Dummy Spec 1",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(119)
                        },
                        new
                        {
                            Id = 22,
                            CategoryID = 2,
                            Code = "MO000008",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(123),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(121),
                            LocationID = 2,
                            Name = "Moninor Dell UltraSharp",
                            Specification = "Dummy Spec 2",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(124)
                        },
                        new
                        {
                            Id = 23,
                            CategoryID = 3,
                            Code = "PC000008",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(127),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(125),
                            LocationID = 2,
                            Name = "Personal Computer",
                            Specification = "Dummy Spec 3",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(128)
                        },
                        new
                        {
                            Id = 24,
                            CategoryID = 1,
                            Code = "LA000008",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(131),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(129),
                            LocationID = 2,
                            Name = "Laptop Dell XPS 17 9710",
                            Specification = "Core i9-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(132)
                        },
                        new
                        {
                            Id = 25,
                            CategoryID = 2,
                            Code = "MO000009",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(135),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(134),
                            LocationID = 2,
                            Name = "Viewsonic VA2432-H",
                            Specification = "24INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(136)
                        },
                        new
                        {
                            Id = 26,
                            CategoryID = 3,
                            Code = "PC000009",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(140),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(138),
                            LocationID = 2,
                            Name = "MXWT2 – iMac 2020 27 inch 5K",
                            Specification = "Core i5 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(140)
                        },
                        new
                        {
                            Id = 27,
                            CategoryID = 1,
                            Code = "LA000009",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(144),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(142),
                            LocationID = 2,
                            Name = "Laptop Dell XPS 18 9710",
                            Specification = "Core i7-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(145)
                        },
                        new
                        {
                            Id = 28,
                            CategoryID = 2,
                            Code = "MO000010",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(148),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(147),
                            LocationID = 2,
                            Name = "Viewsonic VA2434-H",
                            Specification = "20INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(149)
                        },
                        new
                        {
                            Id = 29,
                            CategoryID = 3,
                            Code = "PC000010",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(153),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(151),
                            LocationID = 2,
                            Name = "MXWT2 – iMac 2021 27 inch 5K",
                            Specification = "Core i7 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(154)
                        },
                        new
                        {
                            Id = 30,
                            CategoryID = 1,
                            Code = "LA000010",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(157),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(155),
                            LocationID = 2,
                            Name = "Laptop Dell XPS 18 9715",
                            Specification = "Core i9-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(158)
                        },
                        new
                        {
                            Id = 31,
                            CategoryID = 2,
                            Code = "MO000011",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(161),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(159),
                            LocationID = 2,
                            Name = "Viewsonic VA2436-H",
                            Specification = "21INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(162)
                        },
                        new
                        {
                            Id = 32,
                            CategoryID = 3,
                            Code = "PC000011",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(165),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(164),
                            LocationID = 2,
                            Name = "MXWT2 – iMac 2022 29 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(166)
                        },
                        new
                        {
                            Id = 33,
                            CategoryID = 1,
                            Code = "LA000011",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(169),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(168),
                            LocationID = 2,
                            Name = "Laptop Dell XPS 19 9715",
                            Specification = "Core i5-11980HK, RAM 128GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(170)
                        },
                        new
                        {
                            Id = 34,
                            CategoryID = 2,
                            Code = "MO000012",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(174),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(172),
                            LocationID = 2,
                            Name = "Viewsonic VA2436-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(174)
                        },
                        new
                        {
                            Id = 35,
                            CategoryID = 3,
                            Code = "PC000012",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(178),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(176),
                            LocationID = 2,
                            Name = "MXWT3 – iMac 2022 26 inch 5K",
                            Specification = "Core i7 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(179)
                        },
                        new
                        {
                            Id = 36,
                            CategoryID = 1,
                            Code = "LA000012",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(229),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(227),
                            LocationID = 2,
                            Name = "Laptop Dell XPS 19 9815",
                            Specification = "Core i7-11980HK, RAM 128GB, 4TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(230)
                        },
                        new
                        {
                            Id = 37,
                            CategoryID = 2,
                            Code = "MO000013",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(234),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(232),
                            LocationID = 2,
                            Name = "Viewsonic VA2440-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(235)
                        },
                        new
                        {
                            Id = 38,
                            CategoryID = 3,
                            Code = "PC000013",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(238),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(236),
                            LocationID = 2,
                            Name = "MXWT3 – iMac 2022 39 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(239)
                        },
                        new
                        {
                            Id = 39,
                            CategoryID = 2,
                            Code = "MO000014",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(244),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(241),
                            LocationID = 2,
                            Name = "Viewsonic VA2440-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(244)
                        },
                        new
                        {
                            Id = 40,
                            CategoryID = 3,
                            Code = "PC000014",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(248),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(246),
                            LocationID = 2,
                            Name = "MXWT3 – iMac 2022 39 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(248)
                        },
                        new
                        {
                            Id = 41,
                            CategoryID = 1,
                            Code = "LA000013",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(252),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(250),
                            LocationID = 3,
                            Name = "Laptop HP Probook 450 G1",
                            Specification = "Dummy Spec 1",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(253)
                        },
                        new
                        {
                            Id = 42,
                            CategoryID = 2,
                            Code = "MO000015",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(256),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(254),
                            LocationID = 3,
                            Name = "Moninor Dell UltraSharp",
                            Specification = "Dummy Spec 2",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(257)
                        },
                        new
                        {
                            Id = 43,
                            CategoryID = 3,
                            Code = "PC000015",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(261),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(259),
                            LocationID = 3,
                            Name = "Personal Computer",
                            Specification = "Dummy Spec 3",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(261)
                        },
                        new
                        {
                            Id = 44,
                            CategoryID = 1,
                            Code = "LA000014",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(265),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(263),
                            LocationID = 3,
                            Name = "Laptop Dell XPS 17 9710",
                            Specification = "Core i9-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(266)
                        },
                        new
                        {
                            Id = 45,
                            CategoryID = 2,
                            Code = "MO000016",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(269),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(268),
                            LocationID = 3,
                            Name = "Viewsonic VA2432-H",
                            Specification = "24INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(270)
                        },
                        new
                        {
                            Id = 46,
                            CategoryID = 3,
                            Code = "PC000016",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(274),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(272),
                            LocationID = 3,
                            Name = "MXWT2 – iMac 2020 27 inch 5K",
                            Specification = "Core i5 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(274)
                        },
                        new
                        {
                            Id = 47,
                            CategoryID = 1,
                            Code = "LA000015",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(278),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(276),
                            LocationID = 3,
                            Name = "Laptop Dell XPS 18 9710",
                            Specification = "Core i7-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(279)
                        },
                        new
                        {
                            Id = 48,
                            CategoryID = 2,
                            Code = "MO000017",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(282),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(280),
                            LocationID = 3,
                            Name = "Viewsonic VA2434-H",
                            Specification = "20INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(283)
                        },
                        new
                        {
                            Id = 49,
                            CategoryID = 3,
                            Code = "PC000017",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(287),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(285),
                            LocationID = 3,
                            Name = "MXWT2 – iMac 2021 27 inch 5K",
                            Specification = "Core i7 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(287)
                        },
                        new
                        {
                            Id = 50,
                            CategoryID = 1,
                            Code = "LA000016",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(291),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(289),
                            LocationID = 3,
                            Name = "Laptop Dell XPS 18 9715",
                            Specification = "Core i9-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(291)
                        },
                        new
                        {
                            Id = 51,
                            CategoryID = 2,
                            Code = "MO000018",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(295),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(293),
                            LocationID = 3,
                            Name = "Viewsonic VA2436-H",
                            Specification = "21INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(296)
                        },
                        new
                        {
                            Id = 52,
                            CategoryID = 3,
                            Code = "PC000018",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(299),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(298),
                            LocationID = 3,
                            Name = "MXWT2 – iMac 2022 29 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(300)
                        },
                        new
                        {
                            Id = 53,
                            CategoryID = 1,
                            Code = "LA000017",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(304),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(302),
                            LocationID = 3,
                            Name = "Laptop Dell XPS 19 9715",
                            Specification = "Core i5-11980HK, RAM 128GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(304)
                        },
                        new
                        {
                            Id = 54,
                            CategoryID = 2,
                            Code = "MO000019",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(308),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(306),
                            LocationID = 3,
                            Name = "Viewsonic VA2436-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(309)
                        },
                        new
                        {
                            Id = 55,
                            CategoryID = 3,
                            Code = "PC000019",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(312),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(310),
                            LocationID = 3,
                            Name = "MXWT3 – iMac 2022 26 inch 5K",
                            Specification = "Core i7 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(313)
                        },
                        new
                        {
                            Id = 56,
                            CategoryID = 1,
                            Code = "LA000018",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(316),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(315),
                            LocationID = 3,
                            Name = "Laptop Dell XPS 19 9815",
                            Specification = "Core i7-11980HK, RAM 128GB, 4TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(317)
                        },
                        new
                        {
                            Id = 57,
                            CategoryID = 2,
                            Code = "MO000020",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(321),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(319),
                            LocationID = 3,
                            Name = "Viewsonic VA2440-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(321)
                        },
                        new
                        {
                            Id = 58,
                            CategoryID = 3,
                            Code = "PC000020",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(325),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(323),
                            LocationID = 3,
                            Name = "MXWT3 – iMac 2022 39 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(325)
                        },
                        new
                        {
                            Id = 59,
                            CategoryID = 2,
                            Code = "MO000021",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(329),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(327),
                            LocationID = 3,
                            Name = "Viewsonic VA2440-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(330)
                        },
                        new
                        {
                            Id = 60,
                            CategoryID = 3,
                            Code = "PC000021",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(333),
                            InstalledDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(331),
                            LocationID = 3,
                            Name = "MXWT3 – iMac 2022 39 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 63, DateTimeKind.Local).AddTicks(334)
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Assignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AssetId")
                        .HasColumnType("int");

                    b.Property<int>("AssignedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AssignedState")
                        .HasColumnType("int");

                    b.Property<int>("AssignedToId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReturnRequestId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("AssignedById");

                    b.HasIndex("AssignedToId");

                    b.HasIndex("ReturnRequestId")
                        .IsUnique()
                        .HasFilter("[ReturnRequestId] IS NOT NULL");

                    b.ToTable("Assignments", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssetId = 1,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5460),
                            AssignedState = 2,
                            AssignedToId = 4,
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5447),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5458)
                        },
                        new
                        {
                            Id = 2,
                            AssetId = 2,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5463),
                            AssignedState = 1,
                            AssignedToId = 4,
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5461),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5462)
                        },
                        new
                        {
                            Id = 3,
                            AssetId = 3,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5465),
                            AssignedState = 2,
                            AssignedToId = 4,
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5464),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5464)
                        },
                        new
                        {
                            Id = 4,
                            AssetId = 4,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5468),
                            AssignedState = 2,
                            AssignedToId = 6,
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5466),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5467)
                        },
                        new
                        {
                            Id = 5,
                            AssetId = 5,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5471),
                            AssignedState = 1,
                            AssignedToId = 6,
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5469),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5470)
                        },
                        new
                        {
                            Id = 6,
                            AssetId = 6,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5473),
                            AssignedState = 2,
                            AssignedToId = 6,
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5472),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5472)
                        },
                        new
                        {
                            Id = 7,
                            AssetId = 7,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5476),
                            AssignedState = 2,
                            AssignedToId = 8,
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5474),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5475)
                        },
                        new
                        {
                            Id = 8,
                            AssetId = 8,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5479),
                            AssignedState = 1,
                            AssignedToId = 8,
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5477),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5478)
                        },
                        new
                        {
                            Id = 9,
                            AssetId = 9,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5481),
                            AssignedState = 2,
                            AssignedToId = 8,
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5480),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5480)
                        },
                        new
                        {
                            Id = 10,
                            AssetId = 10,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5484),
                            AssignedState = 2,
                            AssignedToId = 10,
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5482),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5483)
                        },
                        new
                        {
                            Id = 11,
                            AssetId = 11,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5486),
                            AssignedState = 1,
                            AssignedToId = 10,
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5485),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5485)
                        },
                        new
                        {
                            Id = 12,
                            AssetId = 12,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5527),
                            AssignedState = 2,
                            AssignedToId = 10,
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5525),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5526)
                        },
                        new
                        {
                            Id = 13,
                            AssetId = 13,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5530),
                            AssignedState = 2,
                            AssignedToId = 12,
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5528),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5529)
                        },
                        new
                        {
                            Id = 14,
                            AssetId = 14,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5532),
                            AssignedState = 1,
                            AssignedToId = 12,
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5531),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5531)
                        },
                        new
                        {
                            Id = 15,
                            AssetId = 15,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5535),
                            AssignedState = 2,
                            AssignedToId = 12,
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5533),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5534)
                        },
                        new
                        {
                            Id = 16,
                            AssetId = 16,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5537),
                            AssignedState = 2,
                            AssignedToId = 13,
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5536),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5536)
                        },
                        new
                        {
                            Id = 17,
                            AssetId = 17,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5540),
                            AssignedState = 1,
                            AssignedToId = 13,
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5538),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5539)
                        },
                        new
                        {
                            Id = 18,
                            AssetId = 18,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5543),
                            AssignedState = 2,
                            AssignedToId = 13,
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5541),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5542)
                        },
                        new
                        {
                            Id = 19,
                            AssetId = 19,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5545),
                            AssignedState = 1,
                            AssignedToId = 14,
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5544),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5544)
                        },
                        new
                        {
                            Id = 20,
                            AssetId = 20,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5548),
                            AssignedState = 2,
                            AssignedToId = 14,
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5546),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 67, DateTimeKind.Local).AddTicks(5547)
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Laptop",
                            Prefix = "LA",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Monitor",
                            Prefix = "MO",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Personal Computer",
                            Prefix = "PC",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LocationName = "Hồ Chí Minh"
                        },
                        new
                        {
                            Id = 2,
                            LocationName = "Đà Nẵng"
                        },
                        new
                        {
                            Id = 3,
                            LocationName = "Hà Nội"
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.ReturnRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AcceptedById")
                        .HasColumnType("int");

                    b.Property<int>("AssetId")
                        .HasColumnType("int");

                    b.Property<int>("AssignmentId")
                        .HasColumnType("int");

                    b.Property<int>("RequestedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReturnedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AcceptedById");

                    b.HasIndex("AssetId");

                    b.HasIndex("RequestedById");

                    b.ToTable("ReturnRequests", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AcceptedById = 1,
                            AssetId = 2,
                            AssignmentId = 2,
                            RequestedById = 4,
                            ReturnedDate = new DateTime(2022, 8, 9, 14, 23, 30, 71, DateTimeKind.Local).AddTicks(4269),
                            State = 1
                        },
                        new
                        {
                            Id = 2,
                            AssetId = 5,
                            AssignmentId = 5,
                            RequestedById = 6,
                            ReturnedDate = new DateTime(2022, 8, 10, 14, 23, 30, 71, DateTimeKind.Local).AddTicks(4285),
                            State = 2
                        },
                        new
                        {
                            Id = 3,
                            AssetId = 8,
                            AssignmentId = 8,
                            RequestedById = 8,
                            ReturnedDate = new DateTime(2022, 8, 11, 14, 23, 30, 71, DateTimeKind.Local).AddTicks(4286),
                            State = 2
                        },
                        new
                        {
                            Id = 4,
                            AcceptedById = 1,
                            AssetId = 11,
                            AssignmentId = 11,
                            RequestedById = 10,
                            ReturnedDate = new DateTime(2022, 8, 12, 14, 23, 30, 71, DateTimeKind.Local).AddTicks(4288),
                            State = 1
                        },
                        new
                        {
                            Id = 5,
                            AssetId = 17,
                            AssignmentId = 17,
                            RequestedById = 13,
                            ReturnedDate = new DateTime(2022, 8, 10, 14, 23, 30, 71, DateTimeKind.Local).AddTicks(4289),
                            State = 2
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "e6dcdadd-a211-4cd1-af5c-3f273e916709",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "a0c6aefd-8dc0-4bf8-9bf7-eec978d80852",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("State", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Assigned",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Available",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Not available",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Waiting for recycling",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Recycled",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPasswordChanged")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JoinedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "868a9f92-b25e-4171-8784-40baeafb243f",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 33, DateTimeKind.Local).AddTicks(8391),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Nghia",
                            FullName = "Nghia Dinh Trong",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Dinh Trong",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "ADMINHCM",
                            PasswordHash = "AQAAAAEAACcQAAAAEN7Bc+46LwdeIsfnS9ScrWL3S4cvgX9Gefkf215xdY6/1x28yu52LLbUqR9Msz8d3Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "195f5c2c-4c4a-41b9-9298-76b3d0fa2bc7",
                            StaffCode = "SD0001",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 33, DateTimeKind.Local).AddTicks(8403),
                            UserName = "AdminHCM"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a35ce0fb-d94b-44eb-9817-28da16ef8e61",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 33, DateTimeKind.Local).AddTicks(8411),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Thanh",
                            FullName = "Thanh Mai Quoc",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Mai Quoc",
                            LocationId = 2,
                            LockoutEnabled = false,
                            NormalizedUserName = "ADMINDN",
                            PasswordHash = "AQAAAAEAACcQAAAAEBjJscDBkblNIQrTSmsZVZ9q4awSPTdV/2XloDtevychyPGTDUx5c6PTTwRxRnxVig==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1c5fff34-4a46-4841-b00c-a82a64acf534",
                            StaffCode = "SD0002",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 33, DateTimeKind.Local).AddTicks(8412),
                            UserName = "AdminDN"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "bb78ad62-f736-483e-be27-ce6dccbe94df",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 33, DateTimeKind.Local).AddTicks(8419),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Yen",
                            FullName = "Yen Jennie",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Jennie",
                            LocationId = 3,
                            LockoutEnabled = false,
                            NormalizedUserName = "ADMINHN",
                            PasswordHash = "AQAAAAEAACcQAAAAEDidXiNtPbo8DorC7OsYd7acPvj2qFYScZwwnhnGEFXN1L1JrfKoF04/0WQIO5ZEQA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "fcc2a687-e191-48c0-be1e-472d4020b012",
                            StaffCode = "SD0003",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 33, DateTimeKind.Local).AddTicks(8420),
                            UserName = "AdminHN"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "38bb2893-f0c1-4df2-a6cb-d715554f3108",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 33, DateTimeKind.Local).AddTicks(8432),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Bui Xuan",
                            FullName = "Bui Xuan Vinh",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Vinh",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "VINHBX",
                            PasswordHash = "AQAAAAEAACcQAAAAEMX4ZxG2ptBc0VZssnCtBoYJ74PbHba0GeobAZ/+AlOfdoANrLSguhfZr2q70rI1Jg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "32b2bd0a-e19d-4876-bbdf-44bf0105340d",
                            StaffCode = "SD0004",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 33, DateTimeKind.Local).AddTicks(8432),
                            UserName = "vinhbx"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "61d87be4-7238-4a19-b42a-e894b678c9bf",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 33, DateTimeKind.Local).AddTicks(8439),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Huong Khon",
                            FullName = "Huong Khon Vu",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Vu",
                            LocationId = 2,
                            LockoutEnabled = false,
                            NormalizedUserName = "VUHK",
                            PasswordHash = "AQAAAAEAACcQAAAAEHAeJHKjVNN7OfgEXb798BnwTC0muR8QFzpIA+nteoMxm13I6lyyKmVC0OGkzZW0hQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5f1bc744-59e7-4c81-8a89-2404e8ae7498",
                            StaffCode = "SD0005",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 33, DateTimeKind.Local).AddTicks(8440),
                            UserName = "vuhk"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "71e4f750-4601-4de1-b34f-d69de08d9ef8",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 33, DateTimeKind.Local).AddTicks(8446),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Hau Diem",
                            FullName = "Hau Diem Xuan",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Xuan",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "XUANHD",
                            PasswordHash = "AQAAAAEAACcQAAAAEK0bQ90o1eVXZpGMJjvYOKu2QzB1krEzPQE4zpeiMKXQ4GNgAoRRAcY474Bz36vFlQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e2d135e3-6b98-4a69-b0c7-7605e9f8409d",
                            StaffCode = "SD0006",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 33, DateTimeKind.Local).AddTicks(8447),
                            UserName = "xuanhd"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c240d80e-09be-432c-af37-13bdc64394f4",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 33, DateTimeKind.Local).AddTicks(8454),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Luu Huyen",
                            FullName = "Luu Huyen Duc",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Duc",
                            LocationId = 2,
                            LockoutEnabled = false,
                            NormalizedUserName = "DUCLH",
                            PasswordHash = "AQAAAAEAACcQAAAAEI0ce99QRHxtChPmcYtx5z/6y/WXiMfi5U0wH7hjGKNIVwM9hRtHyZA0DdWxPcfesQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8bfcc8b6-c5de-4f64-b6fd-007d35340a80",
                            StaffCode = "SD0007",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 33, DateTimeKind.Local).AddTicks(8454),
                            UserName = "duclh"
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c773e73a-a0ac-4298-b9b7-a1c4b4ca6a01",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 33, DateTimeKind.Local).AddTicks(8464),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Quang Van",
                            FullName = "Quang Van Truong",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Truong",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "TRUONGQV",
                            PasswordHash = "AQAAAAEAACcQAAAAEKMRd3y6100LYbAW/Hke0ln9MJQ828oEnA46Uf/FE9KYWsghii1b4Av1ry4e3RZorw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "58fc9a4c-8b4c-4ff3-844d-9ec1fed022da",
                            StaffCode = "SD0008",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 33, DateTimeKind.Local).AddTicks(8465),
                            UserName = "truongqv"
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e2d30882-d798-41d4-8421-d59875df9a55",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 33, DateTimeKind.Local).AddTicks(8515),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Trieu Tu",
                            FullName = "Trieu Tu Long",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Long",
                            LocationId = 3,
                            LockoutEnabled = false,
                            NormalizedUserName = "LONGTT",
                            PasswordHash = "AQAAAAEAACcQAAAAEFwp8mT4zy9y0XBocpEExucrWR8vEbbseFSGZvNAuSn/REGf8f/ma/TrqIt9Vdjmkw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6c6b39b5-2b6c-441e-aa1e-6d0b9e515d37",
                            StaffCode = "SD0009",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 33, DateTimeKind.Local).AddTicks(8515),
                            UserName = "longtt"
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3533c5b6-cbdb-49f9-b67f-fe708d9a999e",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 33, DateTimeKind.Local).AddTicks(8523),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Gia Cat",
                            FullName = "Gia Cat Luong",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Luong",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "LUONGGC",
                            PasswordHash = "AQAAAAEAACcQAAAAEATRlJmUzoHDBgETcxZz8ExQsALD13h6vE6x0VTgIC8cn1KIDZ0oHSQAg8CqKsJfqA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "aa50540f-017d-49ea-901f-5d5dd025b826",
                            StaffCode = "SD0010",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 33, DateTimeKind.Local).AddTicks(8524),
                            UserName = "luonggc"
                        },
                        new
                        {
                            Id = 12,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d481c20f-0d47-477f-bf65-312ea4786f75",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 33, DateTimeKind.Local).AddTicks(8530),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Minh Khai",
                            FullName = "Nguyen Thi Minh Khai",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Nguyen Thi",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "MINHKHAINT",
                            PasswordHash = "AQAAAAEAACcQAAAAEPSFZdbylzkiIYkGzq4XMqOBaWfSsx4O9seNibkX0osndJCbYfAIcGeHWCMoGt7Ypw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e08a779c-7bda-4087-a3fa-ca6e321fd58b",
                            StaffCode = "SD0012",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 33, DateTimeKind.Local).AddTicks(8531),
                            UserName = "minhkhaint"
                        },
                        new
                        {
                            Id = 13,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ec485ac6-3006-4e21-a549-c027b9dd7718",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 33, DateTimeKind.Local).AddTicks(8541),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Lan Ong",
                            FullName = "Hai Thuonng Lan Ong",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Hai Thuong",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "LANONGHT",
                            PasswordHash = "AQAAAAEAACcQAAAAECnKYRqKcBsAEf/w7uCeLGKl9Z5HSgbmZ+oLIcJ3ANTHwQx8bzEeOwoOXgQRmYl2cw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f8d4c047-6379-400b-9ebe-9c63cf2770e7",
                            StaffCode = "SD0013",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 33, DateTimeKind.Local).AddTicks(8542),
                            UserName = "lanonght"
                        },
                        new
                        {
                            Id = 14,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9fc6a58f-a383-4e57-9837-af10ae422a73",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 33, DateTimeKind.Local).AddTicks(8548),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Hoang",
                            FullName = "Ly Chieu Hoang",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Ly Chieu",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "HOANGLC",
                            PasswordHash = "AQAAAAEAACcQAAAAENQB+/BN7yBIxhoRCC70W3Sjz5JXOF2WF+Rur484yYkv5gzwmorb+5BgS89ZTHxiLw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "10e69457-175d-47d4-a806-bbf439656fb8",
                            StaffCode = "SD0014",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 33, DateTimeKind.Local).AddTicks(8549),
                            UserName = "hoanglc"
                        },
                        new
                        {
                            Id = 11,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b9bd776c-be8b-4ee3-8424-4ac4be21df7c",
                            CreatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 33, DateTimeKind.Local).AddTicks(8555),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            Gender = false,
                            IsDisabled = true,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "ADMINDISABLE",
                            PasswordHash = "AQAAAAEAACcQAAAAEHLI4+3l+95nKMOH0LhtwwSaba7urpEr9udXOttY6ngt97l+qJxcqq3/0mr38mmh6A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "eb311767-0ceb-43cc-aad1-ae62d204b3ae",
                            StaffCode = "SD0011",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 10, 14, 23, 30, 33, DateTimeKind.Local).AddTicks(8556),
                            UserName = "AdminDisable"
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 11,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 12,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 13,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 14,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Asset", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.Category", "Category")
                        .WithMany("Assets")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.Location", "Location")
                        .WithMany("Assets")
                        .HasForeignKey("LocationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.State", "State")
                        .WithMany("Assets")
                        .HasForeignKey("StateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Location");

                    b.Navigation("State");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Assignment", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.Asset", "Asset")
                        .WithMany("Assignments")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.User", "AssignedBy")
                        .WithMany("AssignmentsBys")
                        .HasForeignKey("AssignedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.User", "AssignedTo")
                        .WithMany("Assignments")
                        .HasForeignKey("AssignedToId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.ReturnRequest", "ReturnRequest")
                        .WithOne("Assignment")
                        .HasForeignKey("AssetManagement.Domain.Model.Assignment", "ReturnRequestId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Asset");

                    b.Navigation("AssignedBy");

                    b.Navigation("AssignedTo");

                    b.Navigation("ReturnRequest");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.ReturnRequest", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.User", "AcceptedBy")
                        .WithMany("AcceptedRequestsBy")
                        .HasForeignKey("AcceptedById")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("AssetManagement.Domain.Model.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.User", "RequestedBy")
                        .WithMany("ReturnRequests")
                        .HasForeignKey("RequestedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AcceptedBy");

                    b.Navigation("Asset");

                    b.Navigation("RequestedBy");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.User", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.Location", "Location")
                        .WithMany("Users")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.UserRole", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Asset", b =>
                {
                    b.Navigation("Assignments");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Category", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Location", b =>
                {
                    b.Navigation("Assets");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.ReturnRequest", b =>
                {
                    b.Navigation("Assignment")
                        .IsRequired();
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.State", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.User", b =>
                {
                    b.Navigation("AcceptedRequestsBy");

                    b.Navigation("Assignments");

                    b.Navigation("AssignmentsBys");

                    b.Navigation("ReturnRequests");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
