// <auto-generated />
using System;
using AssetManagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AssetManagement.Data.Migrations
{
    [DbContext(typeof(AssetManagementDbContext))]
    [Migration("20220817054544_add-assignedBy-property")]
    partial class addassignedByproperty
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AssetManagement.Domain.Model.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InstalledDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LocationID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StateID")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryID");

                    b.HasIndex("LocationID");

                    b.HasIndex("StateID");

                    b.ToTable("Assets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryID = 1,
                            Code = "LA000001",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2908),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2887),
                            LocationID = 1,
                            Name = "Laptop HP Probook 450 G1",
                            Specification = "Dummy Spec 1",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2910)
                        },
                        new
                        {
                            Id = 2,
                            CategoryID = 2,
                            Code = "MO000001",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2914),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2912),
                            LocationID = 1,
                            Name = "Moninor Dell UltraSharp",
                            Specification = "Dummy Spec 2",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2915)
                        },
                        new
                        {
                            Id = 3,
                            CategoryID = 3,
                            Code = "PC000001",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2959),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2957),
                            LocationID = 1,
                            Name = "Personal Computer",
                            Specification = "Dummy Spec 3",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2959)
                        },
                        new
                        {
                            Id = 4,
                            CategoryID = 1,
                            Code = "LA000002",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2962),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2961),
                            LocationID = 1,
                            Name = "Laptop Dell XPS 17 9710",
                            Specification = "Core i9-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2963)
                        },
                        new
                        {
                            Id = 5,
                            CategoryID = 2,
                            Code = "MO000002",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2966),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2964),
                            LocationID = 1,
                            Name = "Viewsonic VA2432-H",
                            Specification = "24INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2967)
                        },
                        new
                        {
                            Id = 6,
                            CategoryID = 3,
                            Code = "PC000002",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2969),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2968),
                            LocationID = 1,
                            Name = "MXWT2 – iMac 2020 27 inch 5K",
                            Specification = "Core i5 3.1GHz/ Radeon Pro 5300",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2970)
                        },
                        new
                        {
                            Id = 7,
                            CategoryID = 1,
                            Code = "LA000003",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2973),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2971),
                            LocationID = 1,
                            Name = "Laptop Dell XPS 18 9710",
                            Specification = "Core i7-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2973)
                        },
                        new
                        {
                            Id = 8,
                            CategoryID = 2,
                            Code = "MO000003",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2976),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2975),
                            LocationID = 1,
                            Name = "Viewsonic VA2434-H",
                            Specification = "20INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2976)
                        },
                        new
                        {
                            Id = 9,
                            CategoryID = 3,
                            Code = "PC000003",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2979),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2978),
                            LocationID = 1,
                            Name = "MXWT2 – iMac 2021 27 inch 5K",
                            Specification = "Core i7 3.1GHz/ Radeon Pro 5300",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2979)
                        },
                        new
                        {
                            Id = 10,
                            CategoryID = 1,
                            Code = "LA000004",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2982),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2981),
                            LocationID = 1,
                            Name = "Laptop Dell XPS 18 9715",
                            Specification = "Core i9-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2983)
                        },
                        new
                        {
                            Id = 11,
                            CategoryID = 2,
                            Code = "MO000004",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2985),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2984),
                            LocationID = 1,
                            Name = "Viewsonic VA2436-H",
                            Specification = "21INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2986)
                        },
                        new
                        {
                            Id = 12,
                            CategoryID = 3,
                            Code = "PC000004",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2989),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2987),
                            LocationID = 1,
                            Name = "MXWT2 – iMac 2022 29 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2990)
                        },
                        new
                        {
                            Id = 13,
                            CategoryID = 1,
                            Code = "LA000005",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2992),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2991),
                            LocationID = 1,
                            Name = "Laptop Dell XPS 19 9715",
                            Specification = "Core i5-11980HK, RAM 128GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2993)
                        },
                        new
                        {
                            Id = 14,
                            CategoryID = 2,
                            Code = "MO000005",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2995),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2994),
                            LocationID = 1,
                            Name = "Viewsonic VA2436-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2996)
                        },
                        new
                        {
                            Id = 15,
                            CategoryID = 3,
                            Code = "PC000005",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2998),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2997),
                            LocationID = 1,
                            Name = "MXWT3 – iMac 2022 26 inch 5K",
                            Specification = "Core i7 3.1GHz/ Radeon Pro 5300",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(2999)
                        },
                        new
                        {
                            Id = 16,
                            CategoryID = 1,
                            Code = "LA000006",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3001),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3000),
                            LocationID = 1,
                            Name = "Laptop Dell XPS 19 9815",
                            Specification = "Core i7-11980HK, RAM 128GB, 4TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3002)
                        },
                        new
                        {
                            Id = 17,
                            CategoryID = 2,
                            Code = "MO000006",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3005),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3003),
                            LocationID = 1,
                            Name = "Viewsonic VA2440-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3005)
                        },
                        new
                        {
                            Id = 18,
                            CategoryID = 3,
                            Code = "PC000006",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3008),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3007),
                            LocationID = 1,
                            Name = "MXWT3 – iMac 2022 39 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3008)
                        },
                        new
                        {
                            Id = 19,
                            CategoryID = 2,
                            Code = "MO000007",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3012),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3010),
                            LocationID = 1,
                            Name = "Viewsonic VA2440-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3012)
                        },
                        new
                        {
                            Id = 20,
                            CategoryID = 3,
                            Code = "PC000007",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3015),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3014),
                            LocationID = 1,
                            Name = "MXWT3 – iMac 2022 39 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3015)
                        },
                        new
                        {
                            Id = 21,
                            CategoryID = 1,
                            Code = "LA000007",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3018),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3017),
                            LocationID = 2,
                            Name = "Laptop HP Probook 450 G1",
                            Specification = "Dummy Spec 1",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3018)
                        },
                        new
                        {
                            Id = 22,
                            CategoryID = 2,
                            Code = "MO000008",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3021),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3020),
                            LocationID = 2,
                            Name = "Moninor Dell UltraSharp",
                            Specification = "Dummy Spec 2",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3021)
                        },
                        new
                        {
                            Id = 23,
                            CategoryID = 3,
                            Code = "PC000008",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3024),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3023),
                            LocationID = 2,
                            Name = "Personal Computer",
                            Specification = "Dummy Spec 3",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3024)
                        },
                        new
                        {
                            Id = 24,
                            CategoryID = 1,
                            Code = "LA000008",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3027),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3026),
                            LocationID = 2,
                            Name = "Laptop Dell XPS 17 9710",
                            Specification = "Core i9-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3028)
                        },
                        new
                        {
                            Id = 25,
                            CategoryID = 2,
                            Code = "MO000009",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3030),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3029),
                            LocationID = 2,
                            Name = "Viewsonic VA2432-H",
                            Specification = "24INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3031)
                        },
                        new
                        {
                            Id = 26,
                            CategoryID = 3,
                            Code = "PC000009",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3036),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3035),
                            LocationID = 2,
                            Name = "MXWT2 – iMac 2020 27 inch 5K",
                            Specification = "Core i5 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3037)
                        },
                        new
                        {
                            Id = 27,
                            CategoryID = 1,
                            Code = "LA000009",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3039),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3038),
                            LocationID = 2,
                            Name = "Laptop Dell XPS 18 9710",
                            Specification = "Core i7-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3040)
                        },
                        new
                        {
                            Id = 28,
                            CategoryID = 2,
                            Code = "MO000010",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3042),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3041),
                            LocationID = 2,
                            Name = "Viewsonic VA2434-H",
                            Specification = "20INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3043)
                        },
                        new
                        {
                            Id = 29,
                            CategoryID = 3,
                            Code = "PC000010",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3045),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3044),
                            LocationID = 2,
                            Name = "MXWT2 – iMac 2021 27 inch 5K",
                            Specification = "Core i7 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3046)
                        },
                        new
                        {
                            Id = 30,
                            CategoryID = 1,
                            Code = "LA000010",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3048),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3047),
                            LocationID = 2,
                            Name = "Laptop Dell XPS 18 9715",
                            Specification = "Core i9-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3049)
                        },
                        new
                        {
                            Id = 31,
                            CategoryID = 2,
                            Code = "MO000011",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3051),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3050),
                            LocationID = 2,
                            Name = "Viewsonic VA2436-H",
                            Specification = "21INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3052)
                        },
                        new
                        {
                            Id = 32,
                            CategoryID = 3,
                            Code = "PC000011",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3054),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3053),
                            LocationID = 2,
                            Name = "MXWT2 – iMac 2022 29 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3055)
                        },
                        new
                        {
                            Id = 33,
                            CategoryID = 1,
                            Code = "LA000011",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3059),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3057),
                            LocationID = 2,
                            Name = "Laptop Dell XPS 19 9715",
                            Specification = "Core i5-11980HK, RAM 128GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3059)
                        },
                        new
                        {
                            Id = 34,
                            CategoryID = 2,
                            Code = "MO000012",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3062),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3061),
                            LocationID = 2,
                            Name = "Viewsonic VA2436-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3062)
                        },
                        new
                        {
                            Id = 35,
                            CategoryID = 3,
                            Code = "PC000012",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3065),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3064),
                            LocationID = 2,
                            Name = "MXWT3 – iMac 2022 26 inch 5K",
                            Specification = "Core i7 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3065)
                        },
                        new
                        {
                            Id = 36,
                            CategoryID = 1,
                            Code = "LA000012",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3068),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3067),
                            LocationID = 2,
                            Name = "Laptop Dell XPS 19 9815",
                            Specification = "Core i7-11980HK, RAM 128GB, 4TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3068)
                        },
                        new
                        {
                            Id = 37,
                            CategoryID = 2,
                            Code = "MO000013",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3071),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3070),
                            LocationID = 2,
                            Name = "Viewsonic VA2440-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3071)
                        },
                        new
                        {
                            Id = 38,
                            CategoryID = 3,
                            Code = "PC000013",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3074),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3073),
                            LocationID = 2,
                            Name = "MXWT3 – iMac 2022 39 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3074)
                        },
                        new
                        {
                            Id = 39,
                            CategoryID = 2,
                            Code = "MO000014",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3078),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3076),
                            LocationID = 2,
                            Name = "Viewsonic VA2440-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3079)
                        },
                        new
                        {
                            Id = 40,
                            CategoryID = 3,
                            Code = "PC000014",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3081),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3080),
                            LocationID = 2,
                            Name = "MXWT3 – iMac 2022 39 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3082)
                        },
                        new
                        {
                            Id = 41,
                            CategoryID = 1,
                            Code = "LA000013",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3084),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3083),
                            LocationID = 3,
                            Name = "Laptop HP Probook 450 G1",
                            Specification = "Dummy Spec 1",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3085)
                        },
                        new
                        {
                            Id = 42,
                            CategoryID = 2,
                            Code = "MO000015",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3087),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3086),
                            LocationID = 3,
                            Name = "Moninor Dell UltraSharp",
                            Specification = "Dummy Spec 2",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3088)
                        },
                        new
                        {
                            Id = 43,
                            CategoryID = 3,
                            Code = "PC000015",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3090),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3089),
                            LocationID = 3,
                            Name = "Personal Computer",
                            Specification = "Dummy Spec 3",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3091)
                        },
                        new
                        {
                            Id = 44,
                            CategoryID = 1,
                            Code = "LA000014",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3093),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3092),
                            LocationID = 3,
                            Name = "Laptop Dell XPS 17 9710",
                            Specification = "Core i9-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3094)
                        },
                        new
                        {
                            Id = 45,
                            CategoryID = 2,
                            Code = "MO000016",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3130),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3128),
                            LocationID = 3,
                            Name = "Viewsonic VA2432-H",
                            Specification = "24INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3130)
                        },
                        new
                        {
                            Id = 46,
                            CategoryID = 3,
                            Code = "PC000016",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3134),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3131),
                            LocationID = 3,
                            Name = "MXWT2 – iMac 2020 27 inch 5K",
                            Specification = "Core i5 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3134)
                        },
                        new
                        {
                            Id = 47,
                            CategoryID = 1,
                            Code = "LA000015",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3137),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3135),
                            LocationID = 3,
                            Name = "Laptop Dell XPS 18 9710",
                            Specification = "Core i7-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3137)
                        },
                        new
                        {
                            Id = 48,
                            CategoryID = 2,
                            Code = "MO000017",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3140),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3139),
                            LocationID = 3,
                            Name = "Viewsonic VA2434-H",
                            Specification = "20INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3140)
                        },
                        new
                        {
                            Id = 49,
                            CategoryID = 3,
                            Code = "PC000017",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3143),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3141),
                            LocationID = 3,
                            Name = "MXWT2 – iMac 2021 27 inch 5K",
                            Specification = "Core i7 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3143)
                        },
                        new
                        {
                            Id = 50,
                            CategoryID = 1,
                            Code = "LA000016",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3146),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3144),
                            LocationID = 3,
                            Name = "Laptop Dell XPS 18 9715",
                            Specification = "Core i9-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3146)
                        },
                        new
                        {
                            Id = 51,
                            CategoryID = 2,
                            Code = "MO000018",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3149),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3147),
                            LocationID = 3,
                            Name = "Viewsonic VA2436-H",
                            Specification = "21INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3149)
                        },
                        new
                        {
                            Id = 52,
                            CategoryID = 3,
                            Code = "PC000018",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3152),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3150),
                            LocationID = 3,
                            Name = "MXWT2 – iMac 2022 29 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3152)
                        },
                        new
                        {
                            Id = 53,
                            CategoryID = 1,
                            Code = "LA000017",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3155),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3153),
                            LocationID = 3,
                            Name = "Laptop Dell XPS 19 9715",
                            Specification = "Core i5-11980HK, RAM 128GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3156)
                        },
                        new
                        {
                            Id = 54,
                            CategoryID = 2,
                            Code = "MO000019",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3158),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3157),
                            LocationID = 3,
                            Name = "Viewsonic VA2436-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3159)
                        },
                        new
                        {
                            Id = 55,
                            CategoryID = 3,
                            Code = "PC000019",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3161),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3160),
                            LocationID = 3,
                            Name = "MXWT3 – iMac 2022 26 inch 5K",
                            Specification = "Core i7 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3162)
                        },
                        new
                        {
                            Id = 56,
                            CategoryID = 1,
                            Code = "LA000018",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3165),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3163),
                            LocationID = 3,
                            Name = "Laptop Dell XPS 19 9815",
                            Specification = "Core i7-11980HK, RAM 128GB, 4TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3166)
                        },
                        new
                        {
                            Id = 57,
                            CategoryID = 2,
                            Code = "MO000020",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3168),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3167),
                            LocationID = 3,
                            Name = "Viewsonic VA2440-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3169)
                        },
                        new
                        {
                            Id = 58,
                            CategoryID = 3,
                            Code = "PC000020",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3171),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3170),
                            LocationID = 3,
                            Name = "MXWT3 – iMac 2022 39 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3172)
                        },
                        new
                        {
                            Id = 59,
                            CategoryID = 2,
                            Code = "MO000021",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3174),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3173),
                            LocationID = 3,
                            Name = "Viewsonic VA2440-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3175)
                        },
                        new
                        {
                            Id = 60,
                            CategoryID = 3,
                            Code = "PC000021",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3178),
                            InstalledDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3177),
                            LocationID = 3,
                            Name = "MXWT3 – iMac 2022 39 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 975, DateTimeKind.Local).AddTicks(3179)
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Assignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AssetId")
                        .HasColumnType("int");

                    b.Property<int>("AssignedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AssignedState")
                        .HasColumnType("int");

                    b.Property<int>("AssignedToId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReturnRequestId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("AssignedById");

                    b.HasIndex("AssignedToId");

                    b.HasIndex("ReturnRequestId")
                        .IsUnique()
                        .HasFilter("[ReturnRequestId] IS NOT NULL");

                    b.ToTable("Assignments", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssetId = 1,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1610),
                            AssignedState = 2,
                            AssignedToId = 4,
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 302, DateTimeKind.Local).AddTicks(7885),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 303, DateTimeKind.Local).AddTicks(9976)
                        },
                        new
                        {
                            Id = 2,
                            AssetId = 2,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1914),
                            AssignedState = 1,
                            AssignedToId = 4,
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1909),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1912)
                        },
                        new
                        {
                            Id = 3,
                            AssetId = 3,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1917),
                            AssignedState = 2,
                            AssignedToId = 4,
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1915),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1916)
                        },
                        new
                        {
                            Id = 4,
                            AssetId = 4,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1919),
                            AssignedState = 2,
                            AssignedToId = 6,
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1918),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1918)
                        },
                        new
                        {
                            Id = 5,
                            AssetId = 5,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1922),
                            AssignedState = 1,
                            AssignedToId = 6,
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1920),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1921)
                        },
                        new
                        {
                            Id = 6,
                            AssetId = 6,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1931),
                            AssignedState = 2,
                            AssignedToId = 6,
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1929),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1930)
                        },
                        new
                        {
                            Id = 7,
                            AssetId = 7,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1934),
                            AssignedState = 2,
                            AssignedToId = 8,
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1932),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1932)
                        },
                        new
                        {
                            Id = 8,
                            AssetId = 8,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1936),
                            AssignedState = 1,
                            AssignedToId = 8,
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1935),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1935)
                        },
                        new
                        {
                            Id = 9,
                            AssetId = 9,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1938),
                            AssignedState = 2,
                            AssignedToId = 8,
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1937),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1938)
                        },
                        new
                        {
                            Id = 10,
                            AssetId = 10,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1942),
                            AssignedState = 2,
                            AssignedToId = 10,
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1940),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1941)
                        },
                        new
                        {
                            Id = 11,
                            AssetId = 11,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1944),
                            AssignedState = 1,
                            AssignedToId = 10,
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1943),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1943)
                        },
                        new
                        {
                            Id = 12,
                            AssetId = 12,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1947),
                            AssignedState = 2,
                            AssignedToId = 10,
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1945),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1946)
                        },
                        new
                        {
                            Id = 13,
                            AssetId = 13,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1949),
                            AssignedState = 2,
                            AssignedToId = 12,
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1948),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1948)
                        },
                        new
                        {
                            Id = 14,
                            AssetId = 14,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1951),
                            AssignedState = 1,
                            AssignedToId = 12,
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1950),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1951)
                        },
                        new
                        {
                            Id = 15,
                            AssetId = 15,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1953),
                            AssignedState = 2,
                            AssignedToId = 12,
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1952),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1953)
                        },
                        new
                        {
                            Id = 16,
                            AssetId = 16,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1956),
                            AssignedState = 2,
                            AssignedToId = 13,
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1954),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1955)
                        },
                        new
                        {
                            Id = 17,
                            AssetId = 17,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1958),
                            AssignedState = 1,
                            AssignedToId = 13,
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1957),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1957)
                        },
                        new
                        {
                            Id = 18,
                            AssetId = 18,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1962),
                            AssignedState = 2,
                            AssignedToId = 13,
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1960),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1961)
                        },
                        new
                        {
                            Id = 19,
                            AssetId = 19,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1964),
                            AssignedState = 1,
                            AssignedToId = 14,
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1962),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1963)
                        },
                        new
                        {
                            Id = 20,
                            AssetId = 20,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(2076),
                            AssignedState = 2,
                            AssignedToId = 14,
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(2074),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(2075)
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Laptop",
                            Prefix = "LA",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Monitor",
                            Prefix = "MO",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Personal Computer",
                            Prefix = "PC",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LocationName = "Hồ Chí Minh"
                        },
                        new
                        {
                            Id = 2,
                            LocationName = "Đà Nẵng"
                        },
                        new
                        {
                            Id = 3,
                            LocationName = "Hà Nội"
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.ReturnRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AcceptedById")
                        .HasColumnType("int");

                    b.Property<int>("AssetId")
                        .HasColumnType("int");

                    b.Property<int>("AssignedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AssignmentId")
                        .HasColumnType("int");

                    b.Property<int>("RequestedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReturnedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AcceptedById");

                    b.HasIndex("AssetId");

                    b.HasIndex("AssignedById");

                    b.HasIndex("RequestedById");

                    b.ToTable("ReturnRequests", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AcceptedById = 1,
                            AssetId = 2,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1914),
                            AssignmentId = 2,
                            RequestedById = 4,
                            ReturnedDate = new DateTime(2022, 8, 14, 12, 45, 43, 984, DateTimeKind.Local).AddTicks(4610),
                            State = 1
                        },
                        new
                        {
                            Id = 2,
                            AssetId = 5,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1922),
                            AssignmentId = 5,
                            RequestedById = 6,
                            State = 2
                        },
                        new
                        {
                            Id = 3,
                            AssetId = 8,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1936),
                            AssignmentId = 8,
                            RequestedById = 8,
                            State = 2
                        },
                        new
                        {
                            Id = 4,
                            AcceptedById = 1,
                            AssetId = 11,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1944),
                            AssignmentId = 11,
                            RequestedById = 10,
                            ReturnedDate = new DateTime(2022, 8, 17, 12, 45, 43, 984, DateTimeKind.Local).AddTicks(4637),
                            State = 1
                        },
                        new
                        {
                            Id = 5,
                            AssetId = 17,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 15, 12, 45, 43, 304, DateTimeKind.Local).AddTicks(1958),
                            AssignmentId = 17,
                            RequestedById = 13,
                            State = 2
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "b3973079-f90f-4184-bf0e-5ed17d173a95",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "472f9a87-ed33-4b59-a376-5fd3ff1a8c94",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("State", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Assigned",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Available",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Not available",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Waiting for recycling",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Recycled",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPasswordChanged")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JoinedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b30ebfe1-4eb5-426b-891c-f6abc25080ac",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 875, DateTimeKind.Local).AddTicks(9817),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Nghia",
                            FullName = "Nghia Dinh Trong",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Dinh Trong",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "ADMINHCM",
                            PasswordHash = "AQAAAAEAACcQAAAAEFnsfAOpdmIqYHt3HRWzI6tkBG6DK/ij14ul0VGmi3hIU+frNp8J9ryJTyxAqKhQmQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "aee14242-f47c-413f-9704-5a4f74cdee73",
                            StaffCode = "SD0001",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 875, DateTimeKind.Local).AddTicks(9831),
                            UserName = "AdminHCM"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b41208a6-cd39-425c-b967-5099cd357771",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 875, DateTimeKind.Local).AddTicks(9840),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Thanh",
                            FullName = "Thanh Mai Quoc",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Mai Quoc",
                            LocationId = 2,
                            LockoutEnabled = false,
                            NormalizedUserName = "ADMINDN",
                            PasswordHash = "AQAAAAEAACcQAAAAELyVL28Qq9EEKcLqntmMN1xRjq0hl3JYusMKNKrhQVwR0Ro+Zvakm6tLFAl3R8d2zw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b82146b9-1bb2-42ec-a9ab-4b123919d6f5",
                            StaffCode = "SD0002",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 875, DateTimeKind.Local).AddTicks(9841),
                            UserName = "AdminDN"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4b0d6ac7-6415-4b55-8609-06b838d795af",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 875, DateTimeKind.Local).AddTicks(9848),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Yen",
                            FullName = "Yen Jennie",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Jennie",
                            LocationId = 3,
                            LockoutEnabled = false,
                            NormalizedUserName = "ADMINHN",
                            PasswordHash = "AQAAAAEAACcQAAAAEP87ovOaJM16L440IvR0biC3+mpYclZWi7fv7cjaXUknK0M2sa/hrXzuICfLcEo5yw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "bf537231-5f56-45dc-9259-6c2dd3851524",
                            StaffCode = "SD0003",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 875, DateTimeKind.Local).AddTicks(9848),
                            UserName = "AdminHN"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "da6ed239-20af-42a6-a228-9cd4e9eadb5b",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 875, DateTimeKind.Local).AddTicks(9872),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Bui Xuan",
                            FullName = "Bui Xuan Vinh",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Vinh",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "VINHBX",
                            PasswordHash = "AQAAAAEAACcQAAAAEANBdItmGQ6vVovXLCgxGkWJWpUTRO+5xoUOxALZyOudnmj/ZvbogSP0KIZRwRZSGQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b16e063a-bc5b-47fa-85d3-b62972972d84",
                            StaffCode = "SD0004",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 875, DateTimeKind.Local).AddTicks(9873),
                            UserName = "vinhbx"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d620260e-6a55-46c4-b18c-73f68722d139",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 875, DateTimeKind.Local).AddTicks(9879),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Huong Khon",
                            FullName = "Huong Khon Vu",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Vu",
                            LocationId = 2,
                            LockoutEnabled = false,
                            NormalizedUserName = "VUHK",
                            PasswordHash = "AQAAAAEAACcQAAAAEEyHUzUg6MeJUR+th7Vk+A2l73803BfrFRrCw9Iaa/CoFl+nRplEsCk3NRQhU7G6dw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6d076fb5-f8d4-44d2-9d70-24dadac33684",
                            StaffCode = "SD0005",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 875, DateTimeKind.Local).AddTicks(9880),
                            UserName = "vuhk"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b70f8dd6-83a8-43f9-83e8-9224ead575c9",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 875, DateTimeKind.Local).AddTicks(9887),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Hau Diem",
                            FullName = "Hau Diem Xuan",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Xuan",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "XUANHD",
                            PasswordHash = "AQAAAAEAACcQAAAAEH220MbR1AUAQND9lCclx1MpplER6kMGDK5lckcC6WtR29yBoaUcpbXZDjnUOsgDWA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "fa6da2c8-eef5-4354-af99-fcda8b7f24fa",
                            StaffCode = "SD0006",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 875, DateTimeKind.Local).AddTicks(9887),
                            UserName = "xuanhd"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "48f3560b-869f-470f-9e92-721253217f7d",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 875, DateTimeKind.Local).AddTicks(9894),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Luu Huyen",
                            FullName = "Luu Huyen Duc",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Duc",
                            LocationId = 2,
                            LockoutEnabled = false,
                            NormalizedUserName = "DUCLH",
                            PasswordHash = "AQAAAAEAACcQAAAAEEkLzNkEgr5vFeNYehD723PhFwin7quHUEEfWupxxRC6u/zJIUQ5NJynw7QEfENtNQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c2819b65-1b0e-4d6e-a2bd-40e9a9c87d8a",
                            StaffCode = "SD0007",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 875, DateTimeKind.Local).AddTicks(9895),
                            UserName = "duclh"
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f97e5b0a-5e38-4ad2-a1bf-738869e14541",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 875, DateTimeKind.Local).AddTicks(9904),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Quang Van",
                            FullName = "Quang Van Truong",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Truong",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "TRUONGQV",
                            PasswordHash = "AQAAAAEAACcQAAAAEJU2hjUY8LiEMRWFZQElRrDuYyEryw0O3V5LqBrkLiyHv0pgoKpO6+dhfzyM8uhnCw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f2f85eef-2509-4357-876f-5ae1fe4b584a",
                            StaffCode = "SD0008",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 875, DateTimeKind.Local).AddTicks(9905),
                            UserName = "truongqv"
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "53532005-3e88-46dc-8f33-373908bf25e1",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 875, DateTimeKind.Local).AddTicks(9911),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Trieu Tu",
                            FullName = "Trieu Tu Long",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Long",
                            LocationId = 3,
                            LockoutEnabled = false,
                            NormalizedUserName = "LONGTT",
                            PasswordHash = "AQAAAAEAACcQAAAAEAMXIIaiPJG1bagKFyjhK4MX3+OSREyDWjkWpAjO171zF2bhclbb+PTnU7ICnsWr/g==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "12932caa-fce7-4ac4-ac0a-db857ee662cc",
                            StaffCode = "SD0009",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 875, DateTimeKind.Local).AddTicks(9911),
                            UserName = "longtt"
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b582bda1-f0b8-4316-9a8c-9095024db877",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 875, DateTimeKind.Local).AddTicks(9917),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Gia Cat",
                            FullName = "Gia Cat Luong",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Luong",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "LUONGGC",
                            PasswordHash = "AQAAAAEAACcQAAAAEKbNh0flfFtdDOWrWBvElJcreiQ7zzNamEy1Ta7u+r40MnXb69V2rWicCV0Ltl2Lwg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d11ffef1-f3e9-46c8-9679-9c5c287c2dc0",
                            StaffCode = "SD0010",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 875, DateTimeKind.Local).AddTicks(9918),
                            UserName = "luonggc"
                        },
                        new
                        {
                            Id = 12,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a97beffc-8779-46a1-b5e0-2d023f3228b2",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 875, DateTimeKind.Local).AddTicks(9924),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Minh Khai",
                            FullName = "Nguyen Thi Minh Khai",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Nguyen Thi",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "MINHKHAINT",
                            PasswordHash = "AQAAAAEAACcQAAAAEJanumVgoRVcNsI/xMhiraMs15aTSH59W6d2/CadIMZbHSSIOg3XqhCzMW1e8YUtXQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9f13b30d-add6-4c63-be90-facf24b09ce5",
                            StaffCode = "SD0012",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 875, DateTimeKind.Local).AddTicks(9925),
                            UserName = "minhkhaint"
                        },
                        new
                        {
                            Id = 13,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d3760e82-dfc5-42e0-8ddc-d3fe5fa52f4f",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 875, DateTimeKind.Local).AddTicks(9937),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Lan Ong",
                            FullName = "Hai Thuonng Lan Ong",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Hai Thuong",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "LANONGHT",
                            PasswordHash = "AQAAAAEAACcQAAAAECfvQfGyakuYn924uKfN04mV+/NB3vlsMP0qyEmUpFgwrIqzRThbgWVn8Gh1W0sTkQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1708c89e-1af9-4d59-8fbb-bca2c090d013",
                            StaffCode = "SD0013",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 875, DateTimeKind.Local).AddTicks(9937),
                            UserName = "lanonght"
                        },
                        new
                        {
                            Id = 14,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "aaa45835-b32e-4808-9abe-47384f216d4b",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 875, DateTimeKind.Local).AddTicks(9944),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Hoang",
                            FullName = "Ly Chieu Hoang",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Ly Chieu",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "HOANGLC",
                            PasswordHash = "AQAAAAEAACcQAAAAEO8goHEzZ8ExNAnrGkkQbIlKLVI67F8Qj3j4YKzEtpVUineCkwbWfZXViZMjdkUVcw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a046421a-489d-4672-9457-f4ddcb7d71db",
                            StaffCode = "SD0014",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 875, DateTimeKind.Local).AddTicks(9944),
                            UserName = "hoanglc"
                        },
                        new
                        {
                            Id = 11,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2f2b33c8-e946-4d33-bee3-11dd652d27fc",
                            CreatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 875, DateTimeKind.Local).AddTicks(9951),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            Gender = false,
                            IsDisabled = true,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "ADMINDISABLE",
                            PasswordHash = "AQAAAAEAACcQAAAAEAjufjnlm005ha2Sfqmz5vXC8lTwHax5OGSD+uJwdQK8P0NF9lSTnEKRXscE1nXwWA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9f349ac3-ea4f-491e-bec7-873ad2a07f23",
                            StaffCode = "SD0011",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 15, 12, 45, 43, 875, DateTimeKind.Local).AddTicks(9951),
                            UserName = "AdminDisable"
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 11,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 12,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 13,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 14,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Asset", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.Category", "Category")
                        .WithMany("Assets")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.Location", "Location")
                        .WithMany("Assets")
                        .HasForeignKey("LocationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.State", "State")
                        .WithMany("Assets")
                        .HasForeignKey("StateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Location");

                    b.Navigation("State");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Assignment", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.Asset", "Asset")
                        .WithMany("Assignments")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.User", "AssignedBy")
                        .WithMany("AssignmentsBys")
                        .HasForeignKey("AssignedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.User", "AssignedTo")
                        .WithMany("Assignments")
                        .HasForeignKey("AssignedToId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.ReturnRequest", "ReturnRequest")
                        .WithOne("Assignment")
                        .HasForeignKey("AssetManagement.Domain.Model.Assignment", "ReturnRequestId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Asset");

                    b.Navigation("AssignedBy");

                    b.Navigation("AssignedTo");

                    b.Navigation("ReturnRequest");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.ReturnRequest", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.User", "AcceptedBy")
                        .WithMany("AcceptedRequestsBy")
                        .HasForeignKey("AcceptedById")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("AssetManagement.Domain.Model.Asset", "Asset")
                        .WithMany("Historical")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.User", "AssignedBy")
                        .WithMany("AssignedBy")
                        .HasForeignKey("AssignedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.User", "RequestedBy")
                        .WithMany("ReturnRequests")
                        .HasForeignKey("RequestedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AcceptedBy");

                    b.Navigation("Asset");

                    b.Navigation("AssignedBy");

                    b.Navigation("RequestedBy");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.User", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.Location", "Location")
                        .WithMany("Users")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.UserRole", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Asset", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("Historical");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Category", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Location", b =>
                {
                    b.Navigation("Assets");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.ReturnRequest", b =>
                {
                    b.Navigation("Assignment")
                        .IsRequired();
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.State", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.User", b =>
                {
                    b.Navigation("AcceptedRequestsBy");

                    b.Navigation("AssignedBy");

                    b.Navigation("Assignments");

                    b.Navigation("AssignmentsBys");

                    b.Navigation("ReturnRequests");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
