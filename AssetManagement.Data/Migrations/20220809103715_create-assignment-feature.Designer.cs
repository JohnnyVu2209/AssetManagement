// <auto-generated />
using System;
using AssetManagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AssetManagement.Data.Migrations
{
    [DbContext(typeof(AssetManagementDbContext))]
    [Migration("20220809103715_create-assignment-feature")]
    partial class createassignmentfeature
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AssetManagement.Domain.Model.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("History")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InstalledDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LocationID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StateID")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryID");

                    b.HasIndex("LocationID");

                    b.HasIndex("StateID");

                    b.ToTable("Assets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryID = 1,
                            Code = "LA000001",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(5956),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(5929),
                            LocationID = 1,
                            Name = "Laptop HP Probook 450 G1",
                            Specification = "Dummy Spec 1",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(5957)
                        },
                        new
                        {
                            Id = 2,
                            CategoryID = 2,
                            Code = "MO000001",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(5968),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(5960),
                            LocationID = 1,
                            Name = "Moninor Dell UltraSharp",
                            Specification = "Dummy Spec 2",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(5968)
                        },
                        new
                        {
                            Id = 3,
                            CategoryID = 3,
                            Code = "PC000001",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(5973),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(5971),
                            LocationID = 1,
                            Name = "Personal Computer",
                            Specification = "Dummy Spec 3",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(5974)
                        },
                        new
                        {
                            Id = 4,
                            CategoryID = 1,
                            Code = "LA000002",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(5977),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(5975),
                            LocationID = 1,
                            Name = "Laptop Dell XPS 17 9710",
                            Specification = "Core i9-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(5977)
                        },
                        new
                        {
                            Id = 5,
                            CategoryID = 2,
                            Code = "MO000002",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(5981),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(5980),
                            LocationID = 1,
                            Name = "Viewsonic VA2432-H",
                            Specification = "24INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(5982)
                        },
                        new
                        {
                            Id = 6,
                            CategoryID = 3,
                            Code = "PC000002",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(5986),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(5985),
                            LocationID = 1,
                            Name = "MXWT2 – iMac 2020 27 inch 5K",
                            Specification = "Core i5 3.1GHz/ Radeon Pro 5300",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(5987)
                        },
                        new
                        {
                            Id = 7,
                            CategoryID = 1,
                            Code = "LA000003",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(5989),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(5988),
                            LocationID = 1,
                            Name = "Laptop Dell XPS 18 9710",
                            Specification = "Core i7-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(5990)
                        },
                        new
                        {
                            Id = 8,
                            CategoryID = 2,
                            Code = "MO000003",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(5998),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(5992),
                            LocationID = 1,
                            Name = "Viewsonic VA2434-H",
                            Specification = "20INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(5998)
                        },
                        new
                        {
                            Id = 9,
                            CategoryID = 3,
                            Code = "PC000003",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6001),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6000),
                            LocationID = 1,
                            Name = "MXWT2 – iMac 2021 27 inch 5K",
                            Specification = "Core i7 3.1GHz/ Radeon Pro 5300",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6002)
                        },
                        new
                        {
                            Id = 10,
                            CategoryID = 1,
                            Code = "LA000004",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6004),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6003),
                            LocationID = 1,
                            Name = "Laptop Dell XPS 18 9715",
                            Specification = "Core i9-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6021)
                        },
                        new
                        {
                            Id = 11,
                            CategoryID = 2,
                            Code = "MO000004",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6046),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6043),
                            LocationID = 1,
                            Name = "Viewsonic VA2436-H",
                            Specification = "21INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6047)
                        },
                        new
                        {
                            Id = 12,
                            CategoryID = 3,
                            Code = "PC000004",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6054),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6050),
                            LocationID = 1,
                            Name = "MXWT2 – iMac 2022 29 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6055)
                        },
                        new
                        {
                            Id = 13,
                            CategoryID = 1,
                            Code = "LA000005",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6061),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6059),
                            LocationID = 1,
                            Name = "Laptop Dell XPS 19 9715",
                            Specification = "Core i5-11980HK, RAM 128GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6063)
                        },
                        new
                        {
                            Id = 14,
                            CategoryID = 2,
                            Code = "MO000005",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6068),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6066),
                            LocationID = 1,
                            Name = "Viewsonic VA2436-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6070)
                        },
                        new
                        {
                            Id = 15,
                            CategoryID = 3,
                            Code = "PC000005",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6075),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6073),
                            LocationID = 1,
                            Name = "MXWT3 – iMac 2022 26 inch 5K",
                            Specification = "Core i7 3.1GHz/ Radeon Pro 5300",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6077)
                        },
                        new
                        {
                            Id = 16,
                            CategoryID = 1,
                            Code = "LA000006",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6082),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6080),
                            LocationID = 1,
                            Name = "Laptop Dell XPS 19 9815",
                            Specification = "Core i7-11980HK, RAM 128GB, 4TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6084)
                        },
                        new
                        {
                            Id = 17,
                            CategoryID = 2,
                            Code = "MO000006",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6089),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6087),
                            LocationID = 1,
                            Name = "Viewsonic VA2440-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6091)
                        },
                        new
                        {
                            Id = 18,
                            CategoryID = 3,
                            Code = "PC000006",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6096),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6094),
                            LocationID = 1,
                            Name = "MXWT3 – iMac 2022 39 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6098)
                        },
                        new
                        {
                            Id = 19,
                            CategoryID = 2,
                            Code = "MO000007",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6103),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6100),
                            LocationID = 1,
                            Name = "Viewsonic VA2440-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6104)
                        },
                        new
                        {
                            Id = 20,
                            CategoryID = 3,
                            Code = "PC000007",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6110),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6107),
                            LocationID = 1,
                            Name = "MXWT3 – iMac 2022 39 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 1,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6111)
                        },
                        new
                        {
                            Id = 21,
                            CategoryID = 1,
                            Code = "LA000007",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6119),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6116),
                            LocationID = 2,
                            Name = "Laptop HP Probook 450 G1",
                            Specification = "Dummy Spec 1",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6121)
                        },
                        new
                        {
                            Id = 22,
                            CategoryID = 2,
                            Code = "MO000008",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6127),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6124),
                            LocationID = 2,
                            Name = "Moninor Dell UltraSharp",
                            Specification = "Dummy Spec 2",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6128)
                        },
                        new
                        {
                            Id = 23,
                            CategoryID = 3,
                            Code = "PC000008",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6135),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6132),
                            LocationID = 2,
                            Name = "Personal Computer",
                            Specification = "Dummy Spec 3",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6136)
                        },
                        new
                        {
                            Id = 24,
                            CategoryID = 1,
                            Code = "LA000008",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6142),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6140),
                            LocationID = 2,
                            Name = "Laptop Dell XPS 17 9710",
                            Specification = "Core i9-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6144)
                        },
                        new
                        {
                            Id = 25,
                            CategoryID = 2,
                            Code = "MO000009",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6149),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6147),
                            LocationID = 2,
                            Name = "Viewsonic VA2432-H",
                            Specification = "24INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6151)
                        },
                        new
                        {
                            Id = 26,
                            CategoryID = 3,
                            Code = "PC000009",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6157),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6154),
                            LocationID = 2,
                            Name = "MXWT2 – iMac 2020 27 inch 5K",
                            Specification = "Core i5 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6159)
                        },
                        new
                        {
                            Id = 27,
                            CategoryID = 1,
                            Code = "LA000009",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6165),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6162),
                            LocationID = 2,
                            Name = "Laptop Dell XPS 18 9710",
                            Specification = "Core i7-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6165)
                        },
                        new
                        {
                            Id = 28,
                            CategoryID = 2,
                            Code = "MO000010",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6168),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6167),
                            LocationID = 2,
                            Name = "Viewsonic VA2434-H",
                            Specification = "20INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6169)
                        },
                        new
                        {
                            Id = 29,
                            CategoryID = 3,
                            Code = "PC000010",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6172),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6171),
                            LocationID = 2,
                            Name = "MXWT2 – iMac 2021 27 inch 5K",
                            Specification = "Core i7 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6173)
                        },
                        new
                        {
                            Id = 30,
                            CategoryID = 1,
                            Code = "LA000010",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6176),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6175),
                            LocationID = 2,
                            Name = "Laptop Dell XPS 18 9715",
                            Specification = "Core i9-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6177)
                        },
                        new
                        {
                            Id = 31,
                            CategoryID = 2,
                            Code = "MO000011",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6182),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6179),
                            LocationID = 2,
                            Name = "Viewsonic VA2436-H",
                            Specification = "21INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6182)
                        },
                        new
                        {
                            Id = 32,
                            CategoryID = 3,
                            Code = "PC000011",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6186),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6184),
                            LocationID = 2,
                            Name = "MXWT2 – iMac 2022 29 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6187)
                        },
                        new
                        {
                            Id = 33,
                            CategoryID = 1,
                            Code = "LA000011",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6274),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6272),
                            LocationID = 2,
                            Name = "Laptop Dell XPS 19 9715",
                            Specification = "Core i5-11980HK, RAM 128GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6275)
                        },
                        new
                        {
                            Id = 34,
                            CategoryID = 2,
                            Code = "MO000012",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6279),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6277),
                            LocationID = 2,
                            Name = "Viewsonic VA2436-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6280)
                        },
                        new
                        {
                            Id = 35,
                            CategoryID = 3,
                            Code = "PC000012",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6283),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6281),
                            LocationID = 2,
                            Name = "MXWT3 – iMac 2022 26 inch 5K",
                            Specification = "Core i7 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6283)
                        },
                        new
                        {
                            Id = 36,
                            CategoryID = 1,
                            Code = "LA000012",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6286),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6285),
                            LocationID = 2,
                            Name = "Laptop Dell XPS 19 9815",
                            Specification = "Core i7-11980HK, RAM 128GB, 4TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6287)
                        },
                        new
                        {
                            Id = 37,
                            CategoryID = 2,
                            Code = "MO000013",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6291),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6288),
                            LocationID = 2,
                            Name = "Viewsonic VA2440-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6291)
                        },
                        new
                        {
                            Id = 38,
                            CategoryID = 3,
                            Code = "PC000013",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6294),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6293),
                            LocationID = 2,
                            Name = "MXWT3 – iMac 2022 39 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6295)
                        },
                        new
                        {
                            Id = 39,
                            CategoryID = 2,
                            Code = "MO000014",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6304),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6303),
                            LocationID = 2,
                            Name = "Viewsonic VA2440-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6305)
                        },
                        new
                        {
                            Id = 40,
                            CategoryID = 3,
                            Code = "PC000014",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6308),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6307),
                            LocationID = 2,
                            Name = "MXWT3 – iMac 2022 39 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6309)
                        },
                        new
                        {
                            Id = 41,
                            CategoryID = 1,
                            Code = "LA000013",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6312),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6311),
                            LocationID = 3,
                            Name = "Laptop HP Probook 450 G1",
                            Specification = "Dummy Spec 1",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6313)
                        },
                        new
                        {
                            Id = 42,
                            CategoryID = 2,
                            Code = "MO000015",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6316),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6315),
                            LocationID = 3,
                            Name = "Moninor Dell UltraSharp",
                            Specification = "Dummy Spec 2",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6317)
                        },
                        new
                        {
                            Id = 43,
                            CategoryID = 3,
                            Code = "PC000015",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6321),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6320),
                            LocationID = 3,
                            Name = "Personal Computer",
                            Specification = "Dummy Spec 3",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6322)
                        },
                        new
                        {
                            Id = 44,
                            CategoryID = 1,
                            Code = "LA000014",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6324),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6323),
                            LocationID = 3,
                            Name = "Laptop Dell XPS 17 9710",
                            Specification = "Core i9-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6325)
                        },
                        new
                        {
                            Id = 45,
                            CategoryID = 2,
                            Code = "MO000016",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6328),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6326),
                            LocationID = 3,
                            Name = "Viewsonic VA2432-H",
                            Specification = "24INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6329)
                        },
                        new
                        {
                            Id = 46,
                            CategoryID = 3,
                            Code = "PC000016",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6332),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6331),
                            LocationID = 3,
                            Name = "MXWT2 – iMac 2020 27 inch 5K",
                            Specification = "Core i5 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6333)
                        },
                        new
                        {
                            Id = 47,
                            CategoryID = 1,
                            Code = "LA000015",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6337),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6335),
                            LocationID = 3,
                            Name = "Laptop Dell XPS 18 9710",
                            Specification = "Core i7-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6338)
                        },
                        new
                        {
                            Id = 48,
                            CategoryID = 2,
                            Code = "MO000017",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6341),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6340),
                            LocationID = 3,
                            Name = "Viewsonic VA2434-H",
                            Specification = "20INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6342)
                        },
                        new
                        {
                            Id = 49,
                            CategoryID = 3,
                            Code = "PC000017",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6345),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6343),
                            LocationID = 3,
                            Name = "MXWT2 – iMac 2021 27 inch 5K",
                            Specification = "Core i7 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6346)
                        },
                        new
                        {
                            Id = 50,
                            CategoryID = 1,
                            Code = "LA000016",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6349),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6348),
                            LocationID = 3,
                            Name = "Laptop Dell XPS 18 9715",
                            Specification = "Core i9-11980HK, RAM 16GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6349)
                        },
                        new
                        {
                            Id = 51,
                            CategoryID = 2,
                            Code = "MO000018",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6353),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6351),
                            LocationID = 3,
                            Name = "Viewsonic VA2436-H",
                            Specification = "21INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6353)
                        },
                        new
                        {
                            Id = 52,
                            CategoryID = 3,
                            Code = "PC000018",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6357),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6355),
                            LocationID = 3,
                            Name = "MXWT2 – iMac 2022 29 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6357)
                        },
                        new
                        {
                            Id = 53,
                            CategoryID = 1,
                            Code = "LA000017",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6360),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6358),
                            LocationID = 3,
                            Name = "Laptop Dell XPS 19 9715",
                            Specification = "Core i5-11980HK, RAM 128GB, 1TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6360)
                        },
                        new
                        {
                            Id = 54,
                            CategoryID = 2,
                            Code = "MO000019",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6363),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6361),
                            LocationID = 3,
                            Name = "Viewsonic VA2436-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6363)
                        },
                        new
                        {
                            Id = 55,
                            CategoryID = 3,
                            Code = "PC000019",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6366),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6365),
                            LocationID = 3,
                            Name = "MXWT3 – iMac 2022 26 inch 5K",
                            Specification = "Core i7 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6367)
                        },
                        new
                        {
                            Id = 56,
                            CategoryID = 1,
                            Code = "LA000018",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6370),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6368),
                            LocationID = 3,
                            Name = "Laptop Dell XPS 19 9815",
                            Specification = "Core i7-11980HK, RAM 128GB, 4TB SSD, RTX 3060, 17″ 4k Touch",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6370)
                        },
                        new
                        {
                            Id = 57,
                            CategoryID = 2,
                            Code = "MO000020",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6373),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6371),
                            LocationID = 3,
                            Name = "Viewsonic VA2440-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6373)
                        },
                        new
                        {
                            Id = 58,
                            CategoryID = 3,
                            Code = "PC000020",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6378),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6377),
                            LocationID = 3,
                            Name = "MXWT3 – iMac 2022 39 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6379)
                        },
                        new
                        {
                            Id = 59,
                            CategoryID = 2,
                            Code = "MO000021",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6381),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6380),
                            LocationID = 3,
                            Name = "Viewsonic VA2440-H",
                            Specification = "22INCH/IPS/FHD/75HZ/4MS/HDMI/VGA",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6382)
                        },
                        new
                        {
                            Id = 60,
                            CategoryID = 3,
                            Code = "PC000021",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6385),
                            InstalledDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6383),
                            LocationID = 3,
                            Name = "MXWT3 – iMac 2022 39 inch 5K",
                            Specification = "Core i9 3.1GHz/ Radeon Pro 5300",
                            StateID = 2,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 425, DateTimeKind.Local).AddTicks(6385)
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Assignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AssetId")
                        .HasColumnType("int");

                    b.Property<int>("AssignedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AssignedState")
                        .HasColumnType("int");

                    b.Property<int>("AssignedToId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("AssignedById");

                    b.HasIndex("AssignedToId");

                    b.ToTable("Assignments", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssetId = 1,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6267),
                            AssignedState = 2,
                            AssignedToId = 4,
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6218),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6265)
                        },
                        new
                        {
                            Id = 2,
                            AssetId = 2,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6272),
                            AssignedState = 1,
                            AssignedToId = 4,
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6270),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6270)
                        },
                        new
                        {
                            Id = 3,
                            AssetId = 3,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6274),
                            AssignedState = 2,
                            AssignedToId = 4,
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6272),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6273)
                        },
                        new
                        {
                            Id = 4,
                            AssetId = 4,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6277),
                            AssignedState = 2,
                            AssignedToId = 6,
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6276),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6276)
                        },
                        new
                        {
                            Id = 5,
                            AssetId = 5,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6280),
                            AssignedState = 1,
                            AssignedToId = 6,
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6278),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6279)
                        },
                        new
                        {
                            Id = 6,
                            AssetId = 6,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6282),
                            AssignedState = 2,
                            AssignedToId = 6,
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6281),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6282)
                        },
                        new
                        {
                            Id = 7,
                            AssetId = 7,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6285),
                            AssignedState = 2,
                            AssignedToId = 8,
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6283),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6284)
                        },
                        new
                        {
                            Id = 8,
                            AssetId = 8,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6287),
                            AssignedState = 1,
                            AssignedToId = 8,
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6286),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6286)
                        },
                        new
                        {
                            Id = 9,
                            AssetId = 9,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6290),
                            AssignedState = 2,
                            AssignedToId = 8,
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6288),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6289)
                        },
                        new
                        {
                            Id = 10,
                            AssetId = 10,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6293),
                            AssignedState = 2,
                            AssignedToId = 10,
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6291),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6292)
                        },
                        new
                        {
                            Id = 11,
                            AssetId = 11,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6296),
                            AssignedState = 1,
                            AssignedToId = 10,
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6294),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6295)
                        },
                        new
                        {
                            Id = 12,
                            AssetId = 12,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6300),
                            AssignedState = 2,
                            AssignedToId = 10,
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6297),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6297)
                        },
                        new
                        {
                            Id = 13,
                            AssetId = 13,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6302),
                            AssignedState = 2,
                            AssignedToId = 12,
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6301),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6301)
                        },
                        new
                        {
                            Id = 14,
                            AssetId = 14,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6304),
                            AssignedState = 1,
                            AssignedToId = 12,
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6303),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6303)
                        },
                        new
                        {
                            Id = 15,
                            AssetId = 15,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6307),
                            AssignedState = 2,
                            AssignedToId = 12,
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6306),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6306)
                        },
                        new
                        {
                            Id = 16,
                            AssetId = 16,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6309),
                            AssignedState = 2,
                            AssignedToId = 13,
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6308),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6309)
                        },
                        new
                        {
                            Id = 17,
                            AssetId = 17,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6312),
                            AssignedState = 1,
                            AssignedToId = 13,
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6310),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6311)
                        },
                        new
                        {
                            Id = 18,
                            AssetId = 18,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6314),
                            AssignedState = 2,
                            AssignedToId = 13,
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6313),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6313)
                        },
                        new
                        {
                            Id = 19,
                            AssetId = 19,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6316),
                            AssignedState = 1,
                            AssignedToId = 14,
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6315),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6316)
                        },
                        new
                        {
                            Id = 20,
                            AssetId = 20,
                            AssignedById = 1,
                            AssignedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6322),
                            AssignedState = 2,
                            AssignedToId = 14,
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6317),
                            Note = "Provide new Laptop",
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 432, DateTimeKind.Local).AddTicks(6318)
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Laptop",
                            Prefix = "LA",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Monitor",
                            Prefix = "MO",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Personal Computer",
                            Prefix = "PC",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LocationName = "Hồ Chí Minh"
                        },
                        new
                        {
                            Id = 2,
                            LocationName = "Đà Nẵng"
                        },
                        new
                        {
                            Id = 3,
                            LocationName = "Hà Nội"
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.ReturnRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AcceptedById")
                        .HasColumnType("int");

                    b.Property<int>("AssignmentId")
                        .HasColumnType("int");

                    b.Property<int>("RequestedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReturnedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AcceptedById");

                    b.HasIndex("AssignmentId")
                        .IsUnique();

                    b.HasIndex("RequestedById");

                    b.ToTable("ReturnRequests", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AcceptedById = 1,
                            AssignmentId = 2,
                            RequestedById = 4,
                            ReturnedDate = new DateTime(2022, 8, 8, 17, 37, 14, 436, DateTimeKind.Local).AddTicks(575),
                            State = 1
                        },
                        new
                        {
                            Id = 2,
                            AssignmentId = 5,
                            RequestedById = 6,
                            ReturnedDate = new DateTime(2022, 8, 9, 17, 37, 14, 436, DateTimeKind.Local).AddTicks(592),
                            State = 2
                        },
                        new
                        {
                            Id = 3,
                            AssignmentId = 8,
                            RequestedById = 8,
                            ReturnedDate = new DateTime(2022, 8, 10, 17, 37, 14, 436, DateTimeKind.Local).AddTicks(593),
                            State = 2
                        },
                        new
                        {
                            Id = 4,
                            AcceptedById = 1,
                            AssignmentId = 11,
                            RequestedById = 10,
                            ReturnedDate = new DateTime(2022, 8, 11, 17, 37, 14, 436, DateTimeKind.Local).AddTicks(594),
                            State = 1
                        },
                        new
                        {
                            Id = 5,
                            AssignmentId = 17,
                            RequestedById = 13,
                            ReturnedDate = new DateTime(2022, 8, 9, 17, 37, 14, 436, DateTimeKind.Local).AddTicks(595),
                            State = 2
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "93351d56-c19f-4a22-8872-16f8238243b7",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "802fb5a3-efbc-4c24-b3da-2b92a8ec97e4",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("State", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Assigned",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Available",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Not available",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Waiting for recycling",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Recycled",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPasswordChanged")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JoinedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "26bd0eb4-8d24-4b76-a05d-506ffc2c943d",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 285, DateTimeKind.Local).AddTicks(2337),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Nghia",
                            FullName = "Nghia Dinh Trong",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Dinh Trong",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "ADMINHCM",
                            PasswordHash = "AQAAAAEAACcQAAAAEEdyymgQP9A4peJhHcsJftfOzJOqzRNAIF+M+73c20wEnQY0T9gFF7wurpxw7+XCjg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d033420e-7186-4621-ae5a-c9439a7e3ffc",
                            StaffCode = "SD0001",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 285, DateTimeKind.Local).AddTicks(2358),
                            UserName = "AdminHCM"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ec323b93-60c9-43df-8ba8-e6c002ee2378",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 285, DateTimeKind.Local).AddTicks(2373),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Thanh",
                            FullName = "Thanh Mai Quoc",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Mai Quoc",
                            LocationId = 2,
                            LockoutEnabled = false,
                            NormalizedUserName = "ADMINDN",
                            PasswordHash = "AQAAAAEAACcQAAAAEOqBCYChfiff9xk93bSRXXnXJct3MgcQCPtNajGvgF0/PE3j8QdqVpWuoasC+jQQ9Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b80a42d4-a064-46a2-b49d-da3a311baed8",
                            StaffCode = "SD0002",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 285, DateTimeKind.Local).AddTicks(2374),
                            UserName = "AdminDN"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8a0bf66a-02ff-4846-a767-bfe7b02f526a",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 285, DateTimeKind.Local).AddTicks(2385),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Yen",
                            FullName = "Yen Jennie",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Jennie",
                            LocationId = 3,
                            LockoutEnabled = false,
                            NormalizedUserName = "ADMINHN",
                            PasswordHash = "AQAAAAEAACcQAAAAEArKtbZ2Yg/7jpEZO55v0TbXAacBjYaAy8xrjEbMzc7pp8QqOFbUGRmAOkdqpZWXXA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6b485106-72ae-48a5-a66c-3c15d2858923",
                            StaffCode = "SD0003",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 285, DateTimeKind.Local).AddTicks(2386),
                            UserName = "AdminHN"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ad68cc4f-0266-4076-96a3-45d412eeda1a",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 285, DateTimeKind.Local).AddTicks(2415),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Bui Xuan",
                            FullName = "Bui Xuan Vinh",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Vinh",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "VINHBX",
                            PasswordHash = "AQAAAAEAACcQAAAAEAA5NRYBABpGKalHyxRQPM2J6HTqNllQext/mLSMzv1iaucKMvMpkhw2MOqTjzQ+ig==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ac47e691-8c7c-44c8-a63f-ed1c235ab093",
                            StaffCode = "SD0004",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 285, DateTimeKind.Local).AddTicks(2416),
                            UserName = "vinhbx"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a1b453c0-5880-404f-b32f-c44b97ef3803",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 285, DateTimeKind.Local).AddTicks(2427),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Huong Khon",
                            FullName = "Huong Khon Vu",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Vu",
                            LocationId = 2,
                            LockoutEnabled = false,
                            NormalizedUserName = "VUHK",
                            PasswordHash = "AQAAAAEAACcQAAAAEKLVZJ6PXwkP6mHd79EI4Wkl1ALDq9Hs5ANBmn4s7cgF2c+zuy6F4c+l6ON7SRc3wg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "187a34bc-ba07-4918-b73a-b68eae7cf33e",
                            StaffCode = "SD0005",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 285, DateTimeKind.Local).AddTicks(2428),
                            UserName = "vuhk"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "88c5a28f-3021-4f4c-a513-582427a543c4",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 285, DateTimeKind.Local).AddTicks(2437),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Hau Diem",
                            FullName = "Hau Diem Xuan",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Xuan",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "XUANHD",
                            PasswordHash = "AQAAAAEAACcQAAAAEPGj/WilJhKj/q7Rj6wHDMWH1SBxceHE5s6VZUltqLj0AySA1p44mRqBbqc7lWL4qw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2562e064-f47a-456f-a0e8-4ddd989e1adb",
                            StaffCode = "SD0006",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 285, DateTimeKind.Local).AddTicks(2438),
                            UserName = "xuanhd"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ebc2ff89-970a-429e-824f-d49dea774906",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 285, DateTimeKind.Local).AddTicks(2449),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Luu Huyen",
                            FullName = "Luu Huyen Duc",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Duc",
                            LocationId = 2,
                            LockoutEnabled = false,
                            NormalizedUserName = "DUCLH",
                            PasswordHash = "AQAAAAEAACcQAAAAEA7P4nuF9TLKsnTMJXQEFoSqdJVd7UlxHCrY2NRA0mVictqpfttOGkrWAo7k7oPqJQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f8c92d63-1197-49e3-999c-cdfaaa3721dd",
                            StaffCode = "SD0007",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 285, DateTimeKind.Local).AddTicks(2450),
                            UserName = "duclh"
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9055c8b9-ea5a-4973-a285-4a07e8fd59b7",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 285, DateTimeKind.Local).AddTicks(2464),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Quang Van",
                            FullName = "Quang Van Truong",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Truong",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "TRUONGQV",
                            PasswordHash = "AQAAAAEAACcQAAAAEBuNglBpVUgWVRySlM8o3nfhJgjTn3GcOfcst4BNi95jBh8vBWrDGODuY0sYSjUa5Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "29b78b0f-29d5-4bd3-b534-20878b8e2c6e",
                            StaffCode = "SD0008",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 285, DateTimeKind.Local).AddTicks(2465),
                            UserName = "truongqv"
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9e42d605-41d2-4b64-a471-b70890d874a6",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 285, DateTimeKind.Local).AddTicks(2611),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Trieu Tu",
                            FullName = "Trieu Tu Long",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Long",
                            LocationId = 3,
                            LockoutEnabled = false,
                            NormalizedUserName = "LONGTT",
                            PasswordHash = "AQAAAAEAACcQAAAAEFTcqkvW8lnwuoV8xjtbVhTMCaWwHlfCGw1nVbaTSYx+TWayYlsUmSyj0bxTguh9Vw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "06b2d0c8-23fa-4833-904e-71347b998127",
                            StaffCode = "SD0009",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 285, DateTimeKind.Local).AddTicks(2612),
                            UserName = "longtt"
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "20e6404a-01b1-4d99-adb5-3e4a53562e29",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 285, DateTimeKind.Local).AddTicks(2625),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Gia Cat",
                            FullName = "Gia Cat Luong",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Luong",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "LUONGGC",
                            PasswordHash = "AQAAAAEAACcQAAAAEFvAf1WCESYlF7716FKjrEaSi3uPRT58BeoD0hQbgwfUpUNqEf6EVE82V4fvYoGAkg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c82486ba-8ae9-4322-bbf6-6fefcea4a22c",
                            StaffCode = "SD0010",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 285, DateTimeKind.Local).AddTicks(2626),
                            UserName = "luonggc"
                        },
                        new
                        {
                            Id = 12,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c9470dab-e4f7-4fe3-82fd-5fc05edc9ffb",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 285, DateTimeKind.Local).AddTicks(2634),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Minh Khai",
                            FullName = "Nguyen Thi Minh Khai",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Nguyen Thi",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "MINHKHAINT",
                            PasswordHash = "AQAAAAEAACcQAAAAEOhEIbr82MLSA8ToyNl4tgg/hFPWgfDObLRM2vzsqpE/NfrylvYpM4MoNak7f61KDw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e47c180b-5371-4f1d-a436-b65051b22434",
                            StaffCode = "SD0012",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 285, DateTimeKind.Local).AddTicks(2635),
                            UserName = "minhkhaint"
                        },
                        new
                        {
                            Id = 13,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d505b6df-6e24-4901-9ef7-40997b9b9a0f",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 285, DateTimeKind.Local).AddTicks(2645),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Lan Ong",
                            FullName = "Hai Thuonng Lan Ong",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Hai Thuong",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "LANONGHT",
                            PasswordHash = "AQAAAAEAACcQAAAAEECL4yu1eU51tJ0Uce+pdHY2hgXJEcBtBYNxnGZNohBqSLDaqWoCDD5xabVw5ScYig==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "24827e85-01d6-4b1f-8735-6b13783e4630",
                            StaffCode = "SD0013",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 285, DateTimeKind.Local).AddTicks(2646),
                            UserName = "lanonght"
                        },
                        new
                        {
                            Id = 14,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0d55d782-a0aa-42cf-b2c3-1b25e717b273",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 285, DateTimeKind.Local).AddTicks(2655),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Hoang",
                            FullName = "Ly Chieu Hoang",
                            Gender = false,
                            IsDisabled = false,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Ly Chieu",
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "HOANGLC",
                            PasswordHash = "AQAAAAEAACcQAAAAEK+LjH+tydY7ycXL7loAXuWsalzjnoCcyjUeDWL/variECEykU8VzargSIrQaTdI+g==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e492ae4c-6377-41b1-864c-4b9e58b0b13e",
                            StaffCode = "SD0014",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 285, DateTimeKind.Local).AddTicks(2656),
                            UserName = "hoanglc"
                        },
                        new
                        {
                            Id = 11,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "33b7667c-c440-4906-a80c-14000100f157",
                            CreatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 285, DateTimeKind.Local).AddTicks(2664),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            Gender = false,
                            IsDisabled = true,
                            IsPasswordChanged = false,
                            JoinedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1,
                            LockoutEnabled = false,
                            NormalizedUserName = "ADMINDISABLE",
                            PasswordHash = "AQAAAAEAACcQAAAAEM8Gj8QyRIvW1VH9oMrnscPIBh1pulAn7RgmlNzEmJC902Efb9f8Btipr15J9phMXQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4070e19f-2e26-45a8-ac54-4f568c80bb1e",
                            StaffCode = "SD0011",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2022, 8, 9, 17, 37, 14, 285, DateTimeKind.Local).AddTicks(2664),
                            UserName = "AdminDisable"
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 11,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 12,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 13,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 14,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Asset", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.Category", "Category")
                        .WithMany("Assets")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.Location", "Location")
                        .WithMany("Assets")
                        .HasForeignKey("LocationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.State", "State")
                        .WithMany("Assets")
                        .HasForeignKey("StateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Location");

                    b.Navigation("State");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Assignment", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.Asset", "Asset")
                        .WithMany("Assignments")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.User", "AssignedBy")
                        .WithMany("AssignmentsBys")
                        .HasForeignKey("AssignedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.User", "AssignedTo")
                        .WithMany("Assignments")
                        .HasForeignKey("AssignedToId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Asset");

                    b.Navigation("AssignedBy");

                    b.Navigation("AssignedTo");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.ReturnRequest", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.User", "AcceptedBy")
                        .WithMany("AcceptedRequestsBy")
                        .HasForeignKey("AcceptedById")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("AssetManagement.Domain.Model.Assignment", "Assignment")
                        .WithOne("ReturnRequest")
                        .HasForeignKey("AssetManagement.Domain.Model.ReturnRequest", "AssignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.User", "RequestedBy")
                        .WithMany("ReturnRequests")
                        .HasForeignKey("RequestedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AcceptedBy");

                    b.Navigation("Assignment");

                    b.Navigation("RequestedBy");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.User", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.Location", "Location")
                        .WithMany("Users")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.UserRole", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Model.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("AssetManagement.Domain.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Asset", b =>
                {
                    b.Navigation("Assignments");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Assignment", b =>
                {
                    b.Navigation("ReturnRequest");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Category", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Location", b =>
                {
                    b.Navigation("Assets");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.State", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("AssetManagement.Domain.Model.User", b =>
                {
                    b.Navigation("AcceptedRequestsBy");

                    b.Navigation("Assignments");

                    b.Navigation("AssignmentsBys");

                    b.Navigation("ReturnRequests");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
